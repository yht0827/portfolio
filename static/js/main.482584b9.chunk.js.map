{"version":3,"sources":["redux/modules/Lang.js","redux/modules/index.js","redux/configureStore.js","Components/Common/GlobalStyle.js","Components/Project/Item.js","Components/Project/Project.js","Components/Terminal/Terminal.js","Components/Common/Keyframe.js","Components/Info/Info.js","Components/AboutMe/AboutMe.js","Components/Main/data.js","Components/Main/Window.js","Components/Main/Icon.js","Components/Main/UnderBar.js","App.js","index.js"],"names":["changeLang","createAction","changeLog","reducer","handleActions","state","action","lang","payload","isLogged","applyPenders","combineReducers","Lang","pender","penderReducer","composeEnhancers","compose","midleware","penderMiddleware","configureStore","createStore","modules","applyMiddleware","GlobalStyle","createGlobalStyle","reset","ItemWrapper","styled","div","ItemTitle","ItemMoreButton","button","ItemImage","img","ItemInfo","ItemInfoText","ItemInfoTextColor","b","props","color","ItemUsedLang","Item","src","onClick","url","window","open","Content","ProjectView","Project","TerminalWrapper","CommandArea","Command","CommandUser","CommandInput","input","Terminal","bounce","keyframes","scale","Information","InfoWrapper","InfoLogo","InfoDetail","InfoDetailTitle","InfoDetailText","SourceLink","BackButton","Info","changeMenu","href","About","ProfileImg","ProfileName","ProfileBirth","ProfileMotto","ContentWrapper","ContentTitle","ContentText","AboutMe","Dir","folders","startmenu","power","langtext","Loginmenu","name","login","hello","time","day","month","WindowWrapper","Title","CloseButton","span","Button","TitleContent","Window","index","IconArea","IconWraper","IconContent","IconImg","IconName","CSSWrapper","Icon","useState","setindex","openMenu","setMenu","useSelector","map","folder","key","changeAction","image","CSSTransition","in","classNames","timeout","unmountOnExit","value","TaskBar","MenuButton","MenuImg","MenuTime","StartMenu","PowerImg","PowerOffText","LanguageButtonArea","LanguageText","LanguageButton","UnderBar","Date","date","setDate","items","setItems","dispatch","useDispatch","useEffect","Timer","setInterval","tick","clearInterval","toLocaleTimeString","hour","minute","getHours","LangActions","en","kr","Background","Main","Desktop","Login","UserProfile","p","ButtonArea","StyledButton","LoginMessage","LangMessage","TimeArea","TimeAP","DateArea","App","clickBt","setBt","setTimeout","getDate","getDay","getMonth","getAP","Helmet","delay","transitionDuration","hour12","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.482584b9.chunk.js","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport { applyPenders } from \"redux-pender\";\n\n// actions types\n\nconst CHANGE_LANG = \"CHANGE_LANG\";\nconst CHANGE_LOG = \"CHANGE_LOG\";\n\n// action creators\n\nexport const changeLang = createAction(CHANGE_LANG);\nexport const changeLog = createAction(CHANGE_LOG);\n\n// initial state\n\nconst initialState = {\n    lang: \"en\",\n    isLogged: false,\n};\n\n// reducer\n\nconst reducer = handleActions({\n        [CHANGE_LANG] : (state, action) => {\n                const { lang } = action.payload;\n        return {\n            ...state,\n            lang\n        }\n    },\n        [CHANGE_LOG] : (state, action) => {\n            const { isLogged } = action.payload;\n        return {\n            ...state,\n            isLogged\n        }\n    },\n\n},initialState);\n\nexport default applyPenders(reducer,[\n]);\n","import { combineReducers } from \"redux\";\nimport { penderReducer } from \"redux-pender\";\nimport Lang from \"./Lang\";\n\nexport default combineReducers({\n    Lang,\n    pender: penderReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport penderMiddleware from \"redux-pender\";\nimport modules from \"redux/modules\";\n\nconst isDevelopment = process.env.NODE_ENV === \"development\";\nconst composeEnhancers = isDevelopment? (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose) : compose;\nconst midleware = [penderMiddleware()];\n\nif(isDevelopment){\n    const { logger } = require(\"redux-logger\");\n    midleware.push(logger);\n}\n\nconst configureStore = () => {\n    const store = createStore(modules, composeEnhancers(\n            applyMiddleware(...midleware)\n        ));\n            return store;\n}\n\nexport default configureStore;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst GlobalStyle = createGlobalStyle`\n${reset};\n\n    * {\n    box-sizing: border-box;\n    -webkit-overflow-scrolling: touch;\n    }\n\n    html, body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    font-size: 18px;\n    }\n\n    div {\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: -moz-none;\n    -ms-user-select: none;\n    user-select: none;\n    }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ItemWrapper = styled.div`\nwidth: 90%;\nmargin: 20px auto;\npadding: 20px 0;\nbackground-color: #fff;\nborder-radius: 20px;\nbox-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);\n`;\n\nconst ItemTitle = styled.div`\nmargin: 10px 0;\nfont-size: 1.5rem;\nfont-weight: bold;\ncolor: dodgerblue;\n`;\n\nconst ItemMoreButton = styled.button`\n    cursor: pointer;\n    outline: none;\n    border: none;\n    border-radius: 5px;\n    margin-top: 10px;\n    padding: 5px 10px;\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, .2);\n\n    &:hover {\n      box-shadow: 0px 0px 10px rgba(0, 0, 0, .5);\n    }\n`;\n\nconst ItemImage = styled.img`\n        border-radius: 10px;\n    box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.4);\n    @media only screen and (min-width: 320px), (max-width: 768px) {\n      width: 80%;\n      height: 50%;\n    }\n    @media only screen and (min-width: 1224px) {\n      width: 50%;\n      height: 30%;\n    }\n`;\n\nconst ItemInfo = styled.div`\n    margin: 10px 0px;\n`;\nconst ItemInfoText = styled.div`\n    padding: 5px;\n`;\nconst ItemInfoTextColor = styled.b`\n    color: ${props=> props.color};\n`;\n\nconst ItemUsedLang = styled.div`\n    padding: 0;\n    margin: 10px 0;\n    font-size: 1.5rem;\n    font-weight: bold;\n    color: gray;\n`;\n\nconst Item = () => {\n    const showPage = (url) => {\n      window.open(url);\n  };\n\n  return(\n      <ItemWrapper>\n        <ItemTitle>BitMiner</ItemTitle>\n        <ItemImage src=\"logo192.png\" />\n        <ItemUsedLang >JavaScript</ItemUsedLang>\n        <ItemInfo>\n        <ItemInfoTextColor color=\"dodgerblue\">Information</ItemInfoTextColor>  \n        <ItemInfoText>Electron + Vue.js based game</ItemInfoText>\n        <ItemInfoText>Cross platform game!</ItemInfoText>\n        </ItemInfo>\n        <ItemInfo>\n        <ItemInfoTextColor color=\"dodgerblue\">date</ItemInfoTextColor>  \n        <ItemInfoText>2019</ItemInfoText>\n        </ItemInfo> \n        <ItemMoreButton onClick={() => showPage(\"https://www.google.com\")}>more</ItemMoreButton>\n      </ItemWrapper>\n    )\n};\n\nexport default Item;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Item from \"./Item\";\n\nconst Content = styled.div`\nposition: absolute;\ntop: 30px;\nbottom: 0;\nleft: 0;\nright: 0;\noverflow-y: auto;\n`;\n\nconst ProjectView = styled.div`\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  border-radius: 0px 0px 5px 5px;\n  overflow-y: auto;\n  background-color: #eee;\n`;\n\nconst Project = () => {\n\n   return(\n            <Content>\n                <ProjectView>\n                    <Item />\n                </ProjectView>\n            </Content>\n    )\n};\n\nexport default Project;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TerminalWrapper = styled.div`\n    width: 100%;\n    height: 100%;\n    padding: 5px;\n    background-color: rgba(48, 10, 36, 1);\n    border-radius: 0px 0px 5px 5px;\n    overflow-y: auto;\n`;\n\nconst CommandArea = styled.div`\n    padding: 0 5px;\n    color: #fff;\n`;\n\nconst Command = styled.div`\n    font-size: 19px;\n`;\n\nconst CommandUser = styled.b`\n      color: lawngreen;\n`;\n\nconst CommandInput = styled.input`\n        width: 50%;\n        outline: none;\n        border: none;\n        border-radius: 5px;\n        background-color: rgba(255, 255, 255, 0.2);\n        color: #fff;\n        font-size: 1rem;\n        padding: 2px 5px;\n`;\n\nconst Terminal = () => {\n\n    return (\n        <TerminalWrapper>\n            <CommandArea>\n                <Command>\n                    <CommandUser>HT@ubuntu</CommandUser>:~$&nbsp;\n                    <CommandInput />\n                </Command>\n            </CommandArea>\n        </TerminalWrapper>\n    );\n};\n\nexport default Terminal;\n","import { keyframes } from \"styled-components\";\n\nconst bounce = keyframes`\n    0% {\n      color: red;\n    }\n    25% {\n      color: orange;\n    }\n    50% {\n      color: green;\n    }\n    75% {\n      color: blue;\n    }\n    100% {\n      transform: scale(1.1);\n      color: purple;\n    }\n`;\n\nconst scale = keyframes`\n  0% {\n    transform: scale(.5);\n  }\n  100% {\n    transform: scale(1.0);\n  }\n`;\n\nexport { bounce, scale };","import React from \"react\";\nimport styled from \"styled-components\";\nimport { scale } from \"../Common/Keyframe\";\n\nconst Information = styled.div`\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    border-radius: 0px 0px 5px 5px;\n    background-color: #eee;\n`;\n\nconst InfoWrapper = styled.div`\n    width: 100%;\n    height: 100%;\n    overflow-y: auto;\n    @media only screen and (min-width: 320px) {\n      padding-top: 10%;\n    }\n    @media only screen and (min-width: 768px) {\n      padding-top: 5%;\n    }\n    @media only screen and (min-width: 1224px) {\n      padding-top: 10px;\n    }\n`;\n\nconst InfoLogo = styled.img`\n    width: 10rem;\n    transform: scale(.5);\n    animation: ${scale} 1s alternate infinite;\n`;\n\nconst InfoDetail = styled.div`\n    color: gray;\n`;\n\nconst InfoDetailTitle = styled.div`\n        margin-top: 10px;\n        margin-bottom: 20px;\n        color: #41b883;\n        font-weight: bold;\n        font-size: 1.2rem;\n`;\n\nconst InfoDetailText = styled.div`\n        margin: 5px 0;\n`;\n\nconst SourceLink = styled.div`\n      margin: 25px 0;\n`;\n\nconst BackButton = styled.button`\n      cursor: pointer;\n      outline: none;\n      border: none;\n      border-radius: 5px;\n      margin: 20px 0;\n      padding: 5px 10px;\n      box-shadow: 0px 0px 5px rgba(0, 0, 0, .2);\n      transition: .3s;\n      &:hover {\n        box-shadow: 0px 0px 10px rgba(0, 0, 0, .5);\n      }\n`;\n\nconst Info = ({changeMenu}) => {\n\n    return (\n        <Information>\n            <InfoWrapper>\n                <InfoLogo src=\"Images/Mario.jpg\" />\n                <InfoDetail>\n                    <InfoDetailTitle>React.js Protfolio</InfoDetailTitle>\n                    <InfoDetailText>\n                        Developer : <b>YHT</b>\n                    </InfoDetailText>\n                    <InfoDetailText>\n                        Development end date : <b>2019/05/25</b>\n                    </InfoDetailText>\n                    <InfoDetailText>\n                        Languages : React With hooks\n                    </InfoDetailText>\n                    <InfoDetailText>\n                        <SourceLink>\n                        Source code: <a href=\"https://github.com/yht0827\">Github</a>\n                        </SourceLink>\n                    </InfoDetailText>\n                </InfoDetail>\n                <BackButton onClick={() => changeMenu(false)}>Back</BackButton>\n            </InfoWrapper>\n        </Information>\n    );\n};\n\nexport default Info;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { bounce } from \"../Common/Keyframe\";\n\nconst About = styled.div`\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  border-radius: 0px 0px 5px 5px;\n  background-color: #eee;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nconst ProfileImg = styled.img`\n    border: 5px solid #fff;\n    border-radius: 50%;\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, .5);\n    @media only screen and (min-width: 320px) {\n      margin-top: 12%;\n    }\n    @media only screen and (min-width: 768px) {\n      margin-top: 14%;\n    }\n    @media only screen and (min-width: 1224px) {\n      margin-top: 26px;\n    }\n`;\n\nconst ProfileName = styled.div`\n    font-size: 1rem;\n    font-weight: bold;\n`;\n\nconst ProfileBirth = styled.div`\n    margin-top: 5px;\n    font-size: .8rem;\n`;\n\nconst ProfileMotto = styled.div`\n    margin-top: 20px;\n    font-size: 1rem;\n    font-weight: bold;\n    color: gray;\n    animation: ${bounce} 1s alternate infinite;\n`;\n\nconst ContentWrapper = styled.div`\n    margin-top: 3rem;\n`;\n\nconst ContentTitle = styled.div`\n    font-weight: bold;\n    font-size: 1.1rem;\n`;\n\nconst ContentText = styled.div`\n    margin-bottom: 5px;\n    font-weight: bold;\n    font-size: 1.1rem;\n    color: gray;\n`;\n\nconst BackButton = styled.button`\n      cursor: pointer;\n      outline: none;\n      border: none;\n      border-radius: 5px;\n      margin: 20px 0;\n      padding: 5px 10px;\n      box-shadow: 0px 0px 5px rgba(0, 0, 0, .2);\n      transition: .3s;\n      &:hover {\n        box-shadow: 0px 0px 10px rgba(0, 0, 0, .5);\n      }\n`;\n\nconst AboutMe = ({changeMenu}) => {\n\n    return (\n        <About>\n            <ProfileImg src=\"Images/Mario.jpg\" />\n            <ProfileName>YangHeeTae</ProfileName>\n            <ProfileBirth>Birthday 1992.08.27</ProfileBirth>\n            <ProfileMotto>Motto: Don't Give up</ProfileMotto>\n            <ContentWrapper>\n                <ContentTitle>학력</ContentTitle>\n                <ContentText>가톨릭대학교</ContentText>\n                <ContentText>인창고등학교</ContentText>\n            </ContentWrapper>\n            <BackButton onClick={() => changeMenu(false)}>Back</BackButton>\n        </About>\n    );\n};\n\nexport default AboutMe;\n","const Dir = \"Images/Icons/\";\nconst folders = [\n    {   \n        \"kr-name\": \"프로젝트\",\n        \"en-name\": \"Projects\",\n        \"image\": Dir+\"folder.png\" \n    },\n    {\n        \"kr-name\": \"내 정보\",\n        \"en-name\": \"About Me\",\n        \"image\": Dir+\"Me.png\"\n    },\n    {\n        \"kr-name\": \"터미널\",\n        \"en-name\": \"Terminal\",\n        \"image\": Dir+\"terminal.png\"\n    }, \n    {\n        \"kr-name\": \"깃허브\",\n        \"en-name\": \"Github\",\n        \"image\": Dir+\"github.png\"\n    }, \n    {\n        \"kr-name\": \"이메일\",\n        \"en-name\": \"Email\",\n        \"image\": Dir+\"email.png\"\n    },\n    {\n        \"kr-name\": \"정보\",\n        \"en-name\": \"Information\",\n        \"image\": Dir+\"information.png\"\n    },  \n];\n\nconst startmenu = {\n     \"en\" : {\n        lang:\"Korean\",\n        power:\"PowerOff\",\n        langtext:\"Change language\"\n     },\n    \"kr\" : {\n        lang:\"영어\",\n        power:\"종료\",\n        langtext:\"언어 변경\"\n    },\n}\n\nconst Loginmenu = {\n    \"en\" : {\n        name: \"YHT\",\n        login: \"Login\",\n        hello: \"Hello!\",\n        langtext: \"Click to Change language\",\n        time: [\"AM\",\"PM\"],\n        day: ['Sun', 'Mon', 'Thu', 'Wed', 'Thu', 'Fri', 'Sat'],\n        month: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n    },\n    \"kr\" : {\n        name: \"양희태\",\n        login: \"로그인\",\n        hello: \"안녕하세요!\",\n        langtext: \"언어 변경\",\n        time: [\"오전\",\"오후\"],\n        day: [\"일요일\", \"월요일\", \"화요일\", \"수요일\", \"목요일\", \"금요일\", \"토요일\"],\n        month: [\"1월\",\"2월\",\"3월\",\"4월\",\"5월\",\"6월\",\"7월\",\"8월\",\"9월\",\"10월\",\"11월\",\"12월\"]\n    },\n}\n\nexport { folders, startmenu, Loginmenu };","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Project } from \"Components/Project\";\nimport { Terminal } from \"Components/Terminal\";\nimport { Info } from \"Components/Info\";\nimport { AboutMe } from \"Components/AboutMe\";\nimport { folders } from \"Components/Main/data\";\n\nconst WindowWrapper = styled.div`\n  position: absolute;\n  padding: 0;\n  margin: 0;\n  margin: auto;\n  width: 45rem;\n  height: 30rem;\n  border-radius: 5px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);\n  transition: opacity 0.5s;\n  &.fade-enter{\n      opacity: 0;\n  }\n  &.fade-enter-active{\n      opacity: 1;\n  }\n  &.fade-exit {\n      opacity: 1;\n  }\n  &.fade-exit-active {\n      opacity: 0;\n  }\n\n  @media only screen and (min-width: 320px) {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: calc(100% - 50px);\n    -webkit-transform: none;\n       -moz-transform: none;\n        -ms-transform: none;\n         -o-transform: none;\n            transform: none;\n  }\n  @media only screen and (min-width: 768px) {\n    width: 65%;\n    height: 60%;\n    top: calc(50% - 50px);\n    left: 50%;\n    -webkit-transform: translate(-50%, -50%);\n       -moz-transform: translate(-50%, -50%);\n        -ms-transform: translate(-50%, -50%);\n         -o-transform: translate(-50%, -50%);\n            transform: translate(-50%, -50%);\n  }\n  @media only screen and (min-width: 1224px) {\n    width: 45rem;\n    height: 30rem;\n    top: calc(50% - 50px);\n    left: 50%;\n    -webkit-transform: translate(-50%, -50%);\n       -moz-transform: translate(-50%, -50%);\n        -ms-transform: translate(-50%, -50%);\n         -o-transform: translate(-50%, -50%);\n            transform: translate(-50%, -50%);\n  }\n`;\n\nconst Title = styled.div`\n    display: flex;\n    width: 100%;\n    height: 30px;\n    border-radius: 5px 5px 0 0;\n    background-color: #546e7a;\n`;\n\nconst CloseButton = styled.span`\n    cursor: pointer;\n    width: 14px;\n    height: 14px;\n    margin-top: 6px;\n    margin-left: 4px;\n    margin-right: 4px;\n    border-radius: 50%;\n    color: #860003;\n    background-color: #FC3C3F;\n    text-align: center;\n    line-height: 16px;\n`;\n\nconst Button = styled.span`\n    width: 14px;\n    height: 14px;\n    margin-top: 6px;\n    margin-right: 4px;\n    border-radius: 50%;\n    background-color: ${props => props.color};\n    text-align: center;\n    line-height: 16px;\n    &::before {\n    }\n`;\n\nconst TitleContent = styled.div`\n    height: 100%;\n    margin-left: 35%;\n    line-height: 30px;\n    color: #dbdee0;\n    font-weight: bold;\n`;\n\nconst Window = ({ changeMenu, index, Lang }) => (\n      <WindowWrapper>\n                <Title>\n                <CloseButton onClick={() => changeMenu(false)} />\n                <Button color=\"#FEB525\"/>\n                <Button color=\"#2AC933\"/>\n                <TitleContent>{folders[index][Lang+\"-name\"]}</TitleContent>\n              </Title>\n              {index === 0 && <Project />}\n              {index === 1 && <AboutMe changeMenu={changeMenu} />}\n              {index === 2 && <Terminal />}\n              {index === 5 && <Info changeMenu={changeMenu} />}\n      </WindowWrapper>\n);\n\nexport default Window;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Window from \"Components/Main/Window\";\nimport { folders } from \"Components/Main/data\";\n\nconst IconArea = styled.div`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 100%;\n`;\n\nconst IconWraper = styled.div`\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        max-width: 30rem;\n        padding: 1rem;\n`;\n\nconst IconContent = styled.div`\n  cursor: pointer;\n  width: 8rem;\n  height: 8rem;\n  padding: 1rem;\n  border-radius: 5px;\n  text-align: center;\n  &:hover {\n    background-color: rgba(0, 0, 0, .2);\n  }\n`; \n\nconst IconImg = styled.img`\n    width: 4rem;\n    height: 4rem;\n`;\n\nconst IconName = styled.div`\n    color: #fff;\n    text-shadow: 1px 1px 2px #000;\n`;\n\nconst CSSWrapper = styled.div`\n        transition: opacity 0.5s;\n        &.show-enter {\n            opacity: 0;\n        }\n        &.show-enter-active {\n            opacity: 1;\n        }\n        &.show-exit {\n            opacity: 1;\n        }\n        &.show-exit-active {\n            opacity: 0;\n        }\n`;\n\nconst Icon = () => {\n    const [index,setindex] = useState(0);\n    const [openMenu,setMenu] = useState(false);\n    const Lang = useSelector(state => state.Lang.lang);\n\n    const changeAction = (index) => {\n      \n        setindex(index);\n\n        if(index === 3){\n            window.open(\"https://github.com/yht0827\");\n        }else if(index === 4){\n            window.open(\"mailto:yangheetae0827@naver.com\");\n        }else{\n            openMenu? setMenu(false): setMenu(true);\n        }\n    };\n\n    const changeMenu = (value) => {\n        setMenu(value);\n    }\n\n    return (\n    <>\n    <IconArea>\n        <IconWraper>\n            { folders.map((folder, index) => \n                    <IconContent key={index} onClick={() => changeAction(index)}>\n                        <IconImg src={folder.image} />\n                        <IconName>{folder[Lang+\"-name\"]}</IconName>\n                    </IconContent>\n                )\n            }\n        </IconWraper>\n    </IconArea>\n        <CSSTransition in={openMenu} classNames=\"show\" timeout={500} unmountOnExit>\n        <CSSWrapper><Window index={index} changeMenu={changeMenu} Lang={Lang} /></CSSWrapper>\n        </CSSTransition>\n    </>\n)};\n\nexport default Icon;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { CSSTransition } from \"react-transition-group\";\nimport {startmenu } from \"./data\";\nimport * as LangActions from \"redux/modules/Lang\";\n\nconst TaskBar = styled.div`\n    width: 100%;\n    height: 50px;\n    background-color: rgba(0, 0, 0, .3);\n    position: absolute;\n    left: 0;\n    bottom: 0;\n`;\n\nconst MenuButton = styled.button`\n      cursor: pointer;\n      width: 80px;\n      height: 100%;\n      color: #fff;\n      border: none;\n      outline: none;\n      font-weight: bold;\n      font-size: 1rem;\n      background-color: rgba(0, 0, 0, .2);\n      &:hover {\n        background-color: rgba(0, 0, 0, .4);\n      }\n`;\n\nconst MenuImg = styled.img`\n        width: 45px;\n        height: 45px;\n`;\n\nconst MenuTime = styled.div`\n      width: 90px;\n      height: 100%;\n      color: #fff;\n      line-height: 50px;\n      text-align: center;\n      font-size: 1rem;\n      float: right;\n      background-color: rgba(0, 0, 0, .2);\n`;\n\nconst StartMenu = styled.div`\n    position: absolute;\n    left: 0;\n    bottom: 50px;\n    background-color: rgba(0, 0, 0, .5);\n    color: #fff;\n    text-align: center;\n    transition: opacity 0.5s;\n\n    &.fade-enter {\n        opacity: 0;\n    }\n    &.fade-enter-active {\n        opacity: 1;\n    }\n    &.fade-exit {\n        opacity: 1;\n    }\n    &.fade-exit-active {\n        opacity: 0;\n    }\n\n    @media only screen and (min-width: 320px), (min-width: 768px) {\n      border-radius: 0;\n      height: 100%;\n      width: 100%;\n    }\n    @media only screen and (min-width: 1224px) {\n      width: 25rem;\n      height: 40rem;\n      border-top-right-radius: 10px;\n    }\n`;\n\nconst PowerImg = styled.img`\n    cursor: pointer;\n    margin-bottom: 2rem;\n    border-radius: 50%;\n    transition: .3s;\n\n    @media only screen and (min-width: 320px), (min-width: 768px) {\n        margin-top: 50%;\n      }\n      @media only screen and (min-width: 1224px) {\n        margin-top: 40%;\n      }\n      &:hover {\n        box-shadow: 0px 0px 20px rgba(255, 255, 255, 0.5);\n                transform: scale(1.1);\n      }\n`;\n\nconst PowerOffText = styled.div`\n    display: block;\n`;\n\nconst LanguageButtonArea = styled.div``;\n\nconst LanguageText = styled.div`\n        color: #fff;\n        margin-bottom: 16px;\n`;\n\nconst LanguageButton = styled.button`\n        cursor: pointer;\n        outline: none;\n        border: 1px solid #fff;\n        border-radius: 5px;\n        padding: 2px 6px;\n        color: #fff;\n        background-color: transparent;\n                transition: $transition-duration;\n        &:hover {\n          box-shadow: 0px 0px 10px rgba(255, 255, 255, .5);\n        }\n`;\n\nconst UnderBar = ({changeLog}) => {\n    const [openMenu, setMenu] = useState(false);\n    const [date, setDate] = useState(new Date());\n    const Lang = useSelector(state => state.Lang.lang);\n    const [items, setItems] = useState(startmenu[Lang]);\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        const Timer = setInterval(() => tick(),900);\n        return function Cleanup() { clearInterval(Timer); }\n    });\n\n    const changeAction = () => {\n        openMenu ? setMenu(false) : setMenu(true);\n    }\n\n    const tick = () => {\n        setDate(new Date());\n    };\n\n    const changeLang = () => {\n        if(Lang === \"kr\"){\n            dispatch(LangActions.changeLang({lang:\"en\"}));\n            setItems(startmenu.en);\n        }else if(Lang === \"en\"){\n            dispatch(LangActions.changeLang({lang:\"kr\"}));\n            setItems(startmenu.kr);\n        }\n    };\n\n    const getAP = (lang) => {\n        if(lang === \"en\"){\n          return date.getHours() < 12 ? \"AM\" : \"PM\"\n        }else if(lang === \"kr\"){\n          return date.getHours() < 12 ? \"오전\" : \"오후\"\n        }\n      };\n\n    return (\n    <>\n        <TaskBar>\n            <MenuButton onClick={changeAction}>\n                <MenuImg src=\"Images/window.png\" />\n            </MenuButton>\n            <MenuTime>\n                {date.toLocaleTimeString(\"en-GB\",{hour:\"2-digit\",minute:\"2-digit\"})}&nbsp;\n                {getAP(Lang)}\n            </MenuTime>\n        </TaskBar>\n        <CSSTransition in={openMenu} classNames=\"fade\" timeout={300} unmountOnExit>\n            <StartMenu>\n                <PowerImg src=\"Images/poweroff.png\" onClick={() => changeLog()} />\n                <PowerOffText>{items.power}</PowerOffText>\n                <LanguageButtonArea>\n                    <LanguageText>{items.langtext}</LanguageText>\n                    <LanguageButton onClick={() => changeLang()}>{items.lang}</LanguageButton>\n                </LanguageButtonArea>\n            </StartMenu>\n        </CSSTransition>\n    </>\n    );\n};\n\nexport default UnderBar;\n","import React,{ useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GlobalStyle } from \"Components/Common\";\nimport styled from \"styled-components\";\nimport { Icon, UnderBar } from \"Components/Main\"\nimport { Helmet } from \"react-helmet\";\nimport { Loginmenu } from \"Components/Main/data\";\nimport * as LangActions from \"redux/modules/Lang\";\nimport { bounce } from \"Components/Common/Keyframe\";\nimport FadeIn from \"react-fade-in\";\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  font-family: \"NanumSquareRound\";\n  background: url(\"Images/background.jpg\") center;\n  background-size: cover;\n`;\n\nconst Main = styled.div`\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    transition: opacity 0.5s;\n        &.show-enter {\n            opacity: 0;\n        }\n        &.show-enter-active {\n            opacity: 1;\n        }\n        &.show-exit {\n            opacity: 1;\n        }\n        &.show-exit-active {\n            opacity: 0;\n        }\n`;\n\nconst Desktop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    padding-bottom: 50px;\n    overflow-y: auto;\n`;\n\nconst Login = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.6);\n`;\n\nconst UserProfile = styled.div`\n    width: 100%;\n    text-align: center;\n    @media only screen and (min-width: 320px), (min-width: 768px) {\n      margin-top: 25%;\n    }\n    @media only screen and (min-width: 1224px) {\n      margin-top: 10%;\n    }\n`;\n\nconst ProfileImg = styled.img`\n      width: 150px;\n      height: 150px;\n      border-radius: 50%;\n      border: 3px solid #fff;\n      background-color: #fff;\n`;\n\nconst ProfileName = styled.p`\n      color: #fff;\n      font-weight: bold;\n      font-size: 1.5rem;\n`;\n\nconst ButtonArea = styled.div`\n    margin: auto;\n    margin-top: 30px;\n    text-align: center;\n`;\n\nconst StyledButton = styled.button`\n      cursor: pointer;\n      border: 1px solid #fff;\n      border-radius: 5px;\n      background-color: rgba(0, 0, 0, 0);\n      outline: none;\n      color: #fff;\n      font-weight: bold;\n      padding: 10px 20px;\n      transition: 0.3s;\n      &:hover {\n        background-color: rgba(255, 255, 255, 0.2);\n        color: #eee;\n      }\n`;\n\nconst LoginMessage = styled.div`\n      width: 100%;\n      font-weight: bold;\n      font-size: 2rem;\n      color: #fff;\n      text-align: center;\n`;\n\nconst LangMessage = styled.div`\n      width: 100%;\n      font-weight: bold;\n      font-size: 1.3rem;\n      color: #fff;\n      text-align: center;\n      animation: ${bounce} 1s alternate infinite;\n      margin-bottom: 5px;\n`;\n\nconst TimeArea = styled.div`\n    position: absolute;\n    bottom: 0;\n    margin: 20px;\n    color: #fff;\n`;\n\nconst Timer = styled.div`\n    font-weight: bold;\n    @media only screen and (min-width: 320px) {\n        font-size: 2.5rem;\n      }\n      @media only screen and (min-width: 768px), (min-width: 1224px) {\n        font-size: 4rem;\n      }\n`;\n\nconst TimeAP = styled.b`\n        font-size: 1.5rem;\n`;\n\nconst DateArea = styled.div`\n      @media only screen and (min-width: 320px) {\n        font-size: 1rem;\n      }\n      @media only screen and (min-width: 768px), (min-width: 1224px) {\n        font-size: 1.5rem;\n      }\n`;\n\nconst App = () => {\n    const [date, setDate] = useState(new Date());\n    const [clickBt,setBt] = useState(false);\n    const Lang = useSelector(state => state.Lang.lang);\n    const isLogged = useSelector(state => state.Lang.isLogged);\n    const dispatch = useDispatch();\n    \n    const changeLog = () => {\n      if(isLogged){\n        setBt(false);\n        setTimeout(() => dispatch(LangActions.changeLog({isLogged:false})),2000);\n      }else{\n        setBt(true);\n        setTimeout(() => dispatch(LangActions.changeLog({isLogged:true})),2500);\n      }\n    };\n\n    const getDate = (lang) => {\n      if(lang === \"en\"){\n        return `${Loginmenu.en.day[date.getDay()]}, ${date.getDate()} ${Loginmenu.en.month[date.getMonth()]}`;\n      }else{\n        return `${Loginmenu.kr.month[date.getMonth()]} ${date.getDate()}일 ${Loginmenu.kr.day[date.getDay()]}`;\n      }\n    };\n\n    const getAP = (lang) => {\n      if(lang === \"en\"){\n        return date.getHours() < 12 ? \"AM\" : \"PM\"\n      }else if(lang === \"kr\"){\n        return date.getHours() < 12 ? \"오전\" : \"오후\"\n      }\n    };\n\n    const tick = () => {\n      setDate(new Date());\n    };\n\n    const ChangeLang = () => {\n      if(Lang === \"en\"){\n        dispatch(LangActions.changeLang({lang:\"kr\"}));\n        getDate(\"kr\");\n        getAP(\"kr\");\n        setDate(new Date());\n      }else if(Lang === \"kr\"){\n        dispatch(LangActions.changeLang({lang:\"en\"}));\n        getDate(\"en\");\n        getAP(\"en\");\n        setDate(new Date());\n      }     \n};\n\n  useEffect(() => {\n    const Timer = setInterval(() => tick(),900);\n    return function Cleanup() { clearInterval(Timer); }\n  });\n  \n    return (\n    <>\n    <Helmet>\n         <title>Portfolio</title>\n    </Helmet>\n    <Background>\n      <FadeIn delay={300} transitionDuration={700}>\n                  <Main>\n        { isLogged ?\n              <>\n                    <Desktop>\n                      <Icon />\n                    </Desktop>\n                    <UnderBar changeLog={changeLog} />\n              </>\n                :\n              <Login>\n                  <UserProfile>\n                      <ProfileImg src=\"Images/Mario.jpg\" />\n                      <ProfileName>{Loginmenu[Lang].name}</ProfileName>\n                  </UserProfile>\n                  <ButtonArea>\n                 { clickBt ? <LoginMessage>{Loginmenu[Lang].hello}</LoginMessage>\n                   : <StyledButton onClick={() => changeLog()}>{Loginmenu[Lang].login}</StyledButton> \n                 }\n                  </ButtonArea>\n                   <ButtonArea>\n                      <LangMessage onClick={() => ChangeLang()}>{Loginmenu[Lang].langtext}</LangMessage>\n                   </ButtonArea>\n                  <TimeArea>\n                      <Timer>\n                          {date.toLocaleTimeString(\"en-US\", { hour12: false })}\n                          <TimeAP>{getAP(Lang)}</TimeAP>\n                      </Timer>\n                      <DateArea>{getDate(Lang)}</DateArea>\n                  </TimeArea>\n              </Login>\n            }\n            </Main>\n            </FadeIn>\n      <GlobalStyle />\n    </Background>\n    </>\n    )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\"\nimport configureStore from \"redux/configureStore\";\nimport App from './App';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}