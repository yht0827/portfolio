{"version":3,"sources":["redux/modules/Lang.js","redux/modules/index.js","redux/configureStore.js","Components/Common/GlobalStyle.js","Components/Main/data.js","Components/Project/Item.js","Components/Project/Project.js","Components/Terminal/Terminal.js","Components/Common/Keyframe.js","Components/Info/Info.js","Components/AboutMe/AboutMe.js","Components/Main/Window.js","Components/Main/Icon.js","Components/Main/UnderBar.js","App.js","index.js"],"names":["changeLang","createAction","changeLog","reducer","handleActions","state","action","lang","payload","isLogged","applyPenders","combineReducers","Lang","pender","penderReducer","composeEnhancers","compose","midleware","penderMiddleware","configureStore","createStore","modules","applyMiddleware","GlobalStyle","createGlobalStyle","reset","Dir","folders","startmenu","power","langtext","Loginmenu","name","login","hello","time","day","month","infos","title","developer","enddate","language","source","github","back","profiles","birth","motto","grade","uni","major","majors","certificate","certificates","projects","img","infotext","year","showpage","ItemWrapper","styled","div","ItemTitle","ItemMoreButton","button","ItemImage","ItemInfo","ItemInfoText","ItemInfoTextColor","b","props","color","ItemUsedLang","Item","useStore","getState","map","project","index","key","src","text","subindex","onClick","url","window","open","Content","ProjectView","Project","TerminalWrapper","CommandArea","CommandWrapper","Command","CommandResult","pre","command","CommandUser","CommandInput","input","Terminal","changeMenu","useState","setcommand","CommandArr","setArr","commandExec","value","toLowerCase","result","en","kr","Date","toGMTString","toLocaleString","commandCheck","com","autoFocus","type","onChange","event","target","onKeyPress","charCode","spin","keyframes","bounce","scale","Information","InfoWrapper","InfoLogo","InfoDetail","InfoDetailTitle","InfoDetailText","SourceLink","BackButton","Info","href","About","ProfileImg","ProfileName","ProfileBirth","ProfileMotto","ContentWrapper","ContentTitle","ContentText","AboutMe","cert","WindowWrapper","Title","CloseButton","span","Button","TitleContent","Window","IconArea","IconWraper","IconContent","IconImg","IconName","CSSWrapper","Icon","setindex","openMenu","setMenu","folder","changeAction","image","CSSTransition","in","classNames","timeout","unmountOnExit","TaskBar","MenuButton","MenuImg","MenuTime","StartMenu","PowerImg","PowerOffText","LanguageButtonArea","LanguageText","LanguageButton","UnderBar","date","setDate","useSelector","items","setItems","dispatch","useDispatch","useEffect","Timer","setInterval","tick","clearInterval","getAP","getHours","toLocaleTimeString","hour","minute","LangActions","Background","Main","Desktop","Login","UserProfile","ani","p","ButtonArea","StyledButton","LoginMessage","LangMessage","TimeArea","TimeAP","DateArea","App","clickBt","setBt","setTimeout","getDate","getDay","getMonth","Helmet","delay","transitionDuration","hour12","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c789384.chunk.js","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport { applyPenders } from \"redux-pender\";\n\n// actions types\n\nconst CHANGE_LANG = \"CHANGE_LANG\";\nconst CHANGE_LOG = \"CHANGE_LOG\";\n\n// action creators\n\nexport const changeLang = createAction(CHANGE_LANG);\nexport const changeLog = createAction(CHANGE_LOG);\n\n// initial state\n\nconst initialState = {\n    lang: \"en\",\n    isLogged: false,\n};\n\n// reducer\n\nconst reducer = handleActions({\n        [CHANGE_LANG] : (state, action) => {\n                const { lang } = action.payload;\n        return {\n            ...state,\n            lang\n        }\n    },\n        [CHANGE_LOG] : (state, action) => {\n            const { isLogged } = action.payload;\n        return {\n            ...state,\n            isLogged\n        }\n    },\n\n},initialState);\n\nexport default applyPenders(reducer,[]);\n","import { combineReducers } from \"redux\";\nimport { penderReducer } from \"redux-pender\";\nimport Lang from \"redux/modules/Lang\";\n\nexport default combineReducers({\n    Lang,\n    pender: penderReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport penderMiddleware from \"redux-pender\";\nimport modules from \"redux/modules\";\n\nconst isDevelopment = process.env.NODE_ENV === \"development\";\nconst composeEnhancers = isDevelopment? (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose) : compose;\nconst midleware = [penderMiddleware()];\n\nif(isDevelopment){\n    const { logger } = require(\"redux-logger\");\n    midleware.push(logger);\n}\n\nconst configureStore = () => {\n    const store = createStore(modules, composeEnhancers(\n            applyMiddleware(...midleware)\n        ));\n            return store;\n}\n\nexport default configureStore;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst GlobalStyle = createGlobalStyle`\n${reset};\n\n    * {\n    box-sizing: border-box;\n    -webkit-overflow-scrolling: touch;\n    }\n\n    html, body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    font-size: 18px;\n    }\n\n    div {\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: -moz-none;\n    -ms-user-select: none;\n    user-select: none;\n    }\n`;\n\nexport default GlobalStyle;\n","const Dir = \"Images/Icons/\";\nconst folders = [\n    {   \n        \"kr-name\": \"프로젝트\",\n        \"en-name\": \"Projects\",\n        \"image\": Dir+\"folder.png\" \n    },\n    {\n        \"kr-name\": \"프로필\",\n        \"en-name\": \"Profile\",\n        \"image\": Dir+\"Me.png\"\n    },\n    {\n        \"kr-name\": \"터미널\",\n        \"en-name\": \"Terminal\",\n        \"image\": Dir+\"terminal.png\"\n    }, \n    {\n        \"kr-name\": \"깃허브\",\n        \"en-name\": \"Github\",\n        \"image\": Dir+\"github.png\"\n    }, \n    {\n        \"kr-name\": \"이메일\",\n        \"en-name\": \"Email\",\n        \"image\": Dir+\"email.png\"\n    },\n    {\n        \"kr-name\": \"정보\",\n        \"en-name\": \"Information\",\n        \"image\": Dir+\"information.png\"\n    },  \n];\n\nconst startmenu = {\n     \"en\" : {\n        lang:\"Korean\",\n        power:\"PowerOff\",\n        langtext:\"Change language\"\n     },\n    \"kr\" : {\n        lang:\"영어\",\n        power:\"종료\",\n        langtext:\"언어 변경\"\n    },\n}\n\nconst Loginmenu = {\n    \"en\" : {\n        name: \"YHT\",\n        login: \"Login\",\n        hello: \"Hello!\",\n        langtext: \"Click to Change language\",\n        time: [\"AM\",\"PM\"],\n        day: ['Sun', 'Mon', 'Thu', 'Wed', 'Thu', 'Fri', 'Sat'],\n        month: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n    },\n    \"kr\" : {\n        name: \"양희태\",\n        login: \"로그인\",\n        hello: \"안녕하세요!\",\n        langtext: \"언어 변경\",\n        time: [\"오전\",\"오후\"],\n        day: [\"일요일\", \"월요일\", \"화요일\", \"수요일\", \"목요일\", \"금요일\", \"토요일\"],\n        month: [\"1월\",\"2월\",\"3월\",\"4월\",\"5월\",\"6월\",\"7월\",\"8월\",\"9월\",\"10월\",\"11월\",\"12월\"]\n    },\n}\n\nconst infos = {\n   \"en\": {\n    title: \"React.js Portfolio\",\n    developer: \"Developer : \",\n    name: \"YHT\",\n    enddate: \"Development end date : \",\n    language: \"Languages : React Hooks\",\n    source : \"Source code : \",\n    github : \"Github\",\n    back : \"back\"\n    },\n    \"kr\":{\n        title: \"리액트 기반 포트폴리오\",\n        developer: \"개발자 : \",\n        name: \"양희태\",\n        enddate: \"개발 완료 : \",\n        language: \"사용언어 : 리액트 훅스\",\n        source : \"소스 코드 : \",\n        github : \"깃 허브\",\n        back : \"뒤로 가기\"\n    },\n};\n\nconst profiles = {\n    \"en\" : {\n        name : \"YangHeeTae\",\n        birth : \"Birthday 1992.08.27\",\n        motto : \"Motto: Where there is a will there is a way\",\n        grade : \"Education\",\n        uni : \"Catholic University of Korea\",\n        major : \"Major\",\n        majors: [\"Information and Communications\", \"Computer Engineering\"],\n        certificate: \"Certificate\",\n        certificates:[\"Engineer information security\",\"Engineer Information Processing\",\"SQLD\",\"CSTS(AL)\",\"Computer Usage Literacy(1 Grade)\"],\n    },\n    \"kr\" : {\n        name : \"양희태\",\n        birth : \"생년월일 1992.08.27\",\n        motto : \"좌우명: 뜻이 있는 곳에 길이 있다.\",\n        grade : \"학력\",\n        uni : \"가톨릭대학교\",\n        major : \"전공\",\n        majors: [\"정보통신전자공학\", \"컴퓨터공학\"],\n        certificate: \"자격증\",\n        certificates:[\"정보보안기사\",\"정보처리기사\",\"SQL개발자(SQLD)\",\"SW 테스트 전문가(일반)\",\"컴퓨터 활용능력(1급)\"],\n    },\n};\n\nconst commandCheck = (command) => {\n\n    let result = [];\n\n    if(command === \"ls\"){\n        result = {\n            command:command,\n            en:[`Project    AboutMe    Terminal    Github    Email    Information`],\n            kr:[`프로젝트    내정보    터미널    깃허브    이메일    정보`],\n        };\n    }else if(command === \"pwd\"){\n        result = {\n            command:command,\n            en:[`/home/HT`],\n            kr:[`/home/희태`],\n        };\n    }else if(command === \"ls -l\" || command === \"ll\"){\n        result = {\n            command:command,\n            en:[`drwxr-xr-x 2 HT HT 4096 Jul 09:22 Project`,\n                    `drwxr-xr-x 2 HT HT 4096 Sep 05:08 AboutMe`,\n                    \"-rwxr-xr-x 1 HT HT   16 Sep 07:17 Terminal\",\n                    `-rwxr-xr-x 1 HT HT  660 Jun 08:44 Github`,\n                    `-rwxr-xr-x 1 HT HT  168 Jun 15:35 Email`,\n                    `drwxr-xr-x 2 HT HT 4096 Jul 10:51 Information`],\n            kr:[`drwxr-xr-x 2 HT HT 4096 7월 09:22 프로젝트`,\n            `drwxr-xr-x 2 HT HT 4096 9월 05:08 내정보`,\n            \"-rwxr-xr-x 1 HT HT   16 9월 07:17 터미널\",\n            `-rwxr-xr-x 1 HT HT  660 6월 08:44 깃허브`,\n            `-rwxr-xr-x 1 HT HT  168 6월 15:35 이메일`,\n            `drwxr-xr-x 2 HT HT 4096 7월 10:51 정보`],\n        };\n    }else if(command === \"ls -al\"){\n        result = {\n            command:command,\n            en:[`drwxr-xr-x 2 HT HT 4096 May 19:50 .`,\n                    `drwxr-xr-x 4 HT HT 4096 May 19:50 ..`,\n                    `drwxr-xr-x 2 HT HT 4096 Jul 09:22 Project`,\n                    `drwxr-xr-x 2 HT HT 4096 Sep 05:08 AboutMe`,\n                    \"-rwxr-xr-x 1 HT HT   16 Sep 07:17 Terminal\",\n                    `-rwxr-xr-x 1 HT HT  660 Jun 08:44 Github`,\n                    `-rwxr-xr-x 1 HT HT  168 Jun 15:35 Email`,\n                    `drwxr-xr-x 2 HT HT 4096 Jul 10:51 Information`],\n            kr:[`drwxr-xr-x 2 HT HT 4096 5월 19:50 .`,\n            `drwxr-xr-x 4 HT HT 4096 5월 19:50 ..`,\n            `drwxr-xr-x 2 HT HT 4096 7월 09:22 Project`,\n            `drwxr-xr-x 2 HT HT 4096 9월 05:08 AboutMe`,\n            \"-rwxr-xr-x 1 HT HT   16 9월 07:17 Terminal\",\n            `-rwxr-xr-x 1 HT HT  660 6월 08:44 Github`,\n            `-rwxr-xr-x 1 HT HT  168 6월 15:35 Email`,\n            `drwxr-xr-x 2 HT HT 4096 7월 10:51 Information`],\n        };\n    }else if(command === \"date\"){\n        result = {\n            command:command,\n            en:[new Date().toGMTString()],\n            kr:[new Date().toLocaleString(\"ko-Kr\")],\n        };\n    }else if(command === \"whoami\"){\n        result = {\n            command:command,\n            en:[\"HT\"],\n            kr:[\"희태\"],\n        };   \n    }else{\n        result = {\n            command:command,\n            en:[`${command}: Command Not found`],\n            kr:[`${command}: 명령을 찾을 수 없습니다`]\n        };\n    }\n\n    return result;\n};\n\nconst projects = {\n    \"en\" : {\n        \"projects\":[{\n            title:\"BitMiner\",\n            img:\"Images/Mario.jpg\",\n            lang:\"JavaScript\",\n            infotext:[\"Electron + Vue.js based game\",\"Cross platform game!\"],\n            year:\"2019\",\n            showpage:\"https://www.google.com\",\n        }]\n    },\n    \"kr\" : {\n        \"projects\":[{\n            title:\"비트채굴기\",\n            img:\"Images/Mario.jpg\",\n            lang:\"자바스크립트\",\n            infotext:[\"Electron + Vue.js 기반의 게임입니다\",\"크로스 플랫폼 게임입니다!\"],\n            year:\"2019\",\n            showpage:\"https://www.google.com\",\n        }]\n    },\n};\n\nexport { folders, startmenu, Loginmenu, infos, profiles, projects, commandCheck };","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useStore } from \"react-redux\";\nimport { projects } from \"Components/Main/data\";\n\nconst ItemWrapper = styled.div`\nwidth: 90%;\nmargin: 20px auto;\npadding: 20px 0;\nbackground-color: #fff;\nborder-radius: 20px;\nbox-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);\n`;\n\nconst ItemTitle = styled.div`\nmargin: 10px 0;\nfont-size: 1.5rem;\nfont-weight: bold;\ncolor: dodgerblue;\n`;\n\nconst ItemMoreButton = styled.button`\n    cursor: pointer;\n    outline: none;\n    border: none;\n    border-radius: 5px;\n    margin-top: 10px;\n    padding: 5px 10px;\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, .2);\n\n    &:hover {\n      box-shadow: 0px 0px 10px rgba(0, 0, 0, .5);\n    }\n`;\n\nconst ItemImage = styled.img`\n        border-radius: 10px;\n    box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.4);\n    @media only screen and (min-width: 320px), (max-width: 768px) {\n      width: 80%;\n      height: 50%;\n    }\n    @media only screen and (min-width: 1224px) {\n      width: 50%;\n      height: 30%;\n    }\n`;\n\nconst ItemInfo = styled.div`\n    margin: 10px 0px;\n`;\nconst ItemInfoText = styled.div`\n    padding: 5px;\n`;\nconst ItemInfoTextColor = styled.b`\n    color: ${props=> props.color};\n    font-size: 23px;\n`;\n\nconst ItemUsedLang = styled.div`\n    padding: 0;\n    margin: 10px 0;\n    font-size: 1.5rem;\n    font-weight: bold;\n    color: yellowgreen;\n`;\n\nconst Item = () => {\n  const Lang = useStore().getState().Lang.lang;\n  const showPage = (url) => {\n      window.open(url);\n  };\n\n  return(\n        projects[Lang][\"projects\"].map((project, index)=>\n            <ItemWrapper key={index}>\n                <ItemTitle>{project.title}</ItemTitle>\n                <ItemImage src={project.img} />\n                <ItemUsedLang >{project.lang}</ItemUsedLang>\n                <ItemInfo>\n                  <ItemInfoTextColor color=\"sandybrown\">{Lang === \"en\"? \"Information\":\"정보\"}</ItemInfoTextColor>  \n                    { project.infotext.map((text,subindex) => <ItemInfoText key={subindex}>{text}</ItemInfoText>)}\n                </ItemInfo>\n                <ItemInfo>\n                  <ItemInfoTextColor color=\"indianred\">{Lang === \"en\"? \"Date\":\"날짜\"}</ItemInfoTextColor>  \n                  <ItemInfoText>{project.year}</ItemInfoText>\n                </ItemInfo> \n                <ItemMoreButton onClick={() => showPage(project.showpage)}>{Lang === \"en\"? \"more\":\"더보기\"}</ItemMoreButton>\n            </ItemWrapper>)\n    )\n};\n\nexport default Item;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Item from \"Components/Project/Item\";\n\nconst Content = styled.div`\nposition: absolute;\ntop: 30px;\nbottom: 0;\nleft: 0;\nright: 0;\noverflow-y: auto;\n`;\n\nconst ProjectView = styled.div`\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  border-radius: 0px 0px 5px 5px;\n  overflow-y: auto;\n  background-color: #eee;\n`;\n\nconst Project = () => {\n    \n   return(\n            <Content>\n                <ProjectView>\n                    <Item />\n                </ProjectView>\n            </Content>\n    )\n};\n\nexport default Project;\n","import React, { useState } from \"react\";\nimport { useStore } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { commandCheck } from \"Components/Main/data\";\n\nconst TerminalWrapper = styled.div`\n    width: 100%;\n    height: 100%;\n    padding: 5px;\n    background-color: rgba(48, 10, 36, 1);\n    border-radius: 0px 0px 5px 5px;\n    overflow-y: auto;\n`;\n\nconst CommandArea = styled.div`\n    padding: 0 5px;\n    color: #fff;\n`;\n\nconst CommandWrapper = styled.div`\n`;\n\nconst Command = styled.div`\n    font-size: 19px;\n`;\n\nconst CommandResult = styled.pre`\n    color: ${props => props.command === \"ls\" && \"#3498db\"};\n    font-style: ${props => props.command === \"ls\" && \"italic\"};\n    font-family: ${props => (props.command === \"ls -al\" || props.command === \"ls -l\" || props.command === \"ll\")  && \"monospace\"};\n`;\n\nconst CommandUser = styled.b`\n      color: lawngreen;\n`;\n\nconst CommandInput = styled.input`\n        width: 50%;\n        outline: none;\n        border: none;\n        border-radius: 5px;\n        background-color: rgba(255, 255, 255, 0.2);\n        color: #fff;\n        font-size: 1rem;\n        padding: 2px 5px;\n`;\n\nconst Terminal = ({changeMenu}) => {\n\n    const [command,setcommand] = useState(\"\");\n    const [CommandArr,setArr] = useState([]);\n    const Lang = useStore().getState().Lang.lang;\n\n    const handleChange = e => {\n        setcommand(e.target.value);\n    };\n\n    const commandExec = (value) => {\n        const command = value.toLowerCase();\n        if(command === \"clear\"){\n            setArr([]);\n        }else if(command === \"exit\"){\n            changeMenu(false);\n        }else{\n            const result = commandCheck(command);\n            setArr(CommandArr => [...CommandArr,result]);\n        }\n       setcommand(\"\");\n    };\n\n    const handleKey = e => {\n        if(e.charCode === 13){\n         commandExec(command);\n        }\n    };\n    \n    return (\n        <TerminalWrapper>\n            <CommandArea>\n               {CommandArr.map((com,index) => {\n                 return (    \n                     <CommandWrapper key={index}>    \n                    <Command>\n                        <CommandUser>HT@ubuntu</CommandUser>:~$&nbsp;{com.command}\n                    </Command>\n                    {  com[Lang].map((result,subindex) =>\n                       <CommandResult command={com.command} key={subindex}>{result}</CommandResult>)}\n                    </CommandWrapper>\n                    );\n                    }\n                    )\n                }\n                    <Command>\n                        <CommandUser>HT@ubuntu</CommandUser>:~$&nbsp;\n                        <CommandInput autoFocus type=\"text\" value={command} onChange={event => handleChange(event)} onKeyPress={event => handleKey(event)} />\n                    </Command>\n            </CommandArea>\n        </TerminalWrapper>\n    );\n};\n\nexport default Terminal;\n","import { keyframes } from \"styled-components\";\n\nconst spin = keyframes`\n  from {\n    transform: none;\n  }\n\n  to {\n    transform: rotateY(1turn);\n  }\n`;\n\nconst bounce = keyframes`\n    0% {\n      color: red;\n    }\n    25% {\n      color: orange;\n    }\n    50% {\n      color: green;\n    }\n    75% {\n      color: blue;\n    }\n    100% {\n      transform: scale(1.1);\n      color: purple;\n    }\n`;\n\nconst scale = keyframes`\n  0% {\n    transform: scale(.5);\n  }\n  100% {\n    transform: scale(1.0);\n  }\n`;\n\nexport { bounce, scale, spin };","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useStore } from \"react-redux\";\nimport { scale } from \"Components/Common/Keyframe\";\nimport { infos } from \"Components/Main/data\";\n\nconst Information = styled.div`\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    border-radius: 0px 0px 5px 5px;\n    background-color: #eee;\n`;\n\nconst InfoWrapper = styled.div`\n    width: 100%;\n    height: 100%;\n    overflow-y: auto;\n    @media only screen and (min-width: 320px) {\n      padding-top: 30%;\n    }\n    @media only screen and (min-width: 768px) {\n      padding-top: 5%;\n    }\n    @media only screen and (min-width: 1224px) {\n      padding-top: 130px;\n    }\n`;\n\nconst InfoLogo = styled.img`\n    width: 20rem;\n    transform: scale(.5);\n    animation: ${scale} 1s alternate infinite;\n`;\n\nconst InfoDetail = styled.div`\n    color: gray;\n`;\n\nconst InfoDetailTitle = styled.div`\n        margin-top: 10px;\n        margin-bottom: 20px;\n        color: #60D9FA;\n        font-weight: bold;\n        font-size: 2rem;\n`;\n\nconst InfoDetailText = styled.div`\n        margin: 5px 0;\n        font-size: 1rem;\n        color : #4b6584;\n`;\n\nconst SourceLink = styled.div`\n      margin: 25px 0;\n      font-size: 1rem;\n`;\n\nconst BackButton = styled.button`\n      cursor: pointer;\n      outline: none;\n      border: none;\n      border-radius: 5px;\n      margin: 20px 0;\n      padding: 5px 10px;\n      box-shadow: 0px 0px 5px rgba(0, 0, 0, .2);\n      transition: .3s;\n      &:hover {\n        box-shadow: 0px 0px 10px rgba(0, 0, 0, .5);\n      }\n`;\n\nconst Info = ({changeMenu}) => {\n\n    const Lang = useStore().getState().Lang.lang;\n\n    return (\n        <Information>\n            <InfoWrapper>\n                <InfoLogo src=\"Images/react.png\" />\n                <InfoDetail>\n                    <InfoDetailTitle>{infos[Lang][\"title\"]}</InfoDetailTitle>\n                    <InfoDetailText>\n                    {infos[Lang][\"developer\"]}<b>{infos[Lang][\"name\"]}</b>\n                    </InfoDetailText>\n                    <InfoDetailText>\n                    {infos[Lang][\"enddate\"]}<b>2019/05/25</b>\n                    </InfoDetailText>\n                    <InfoDetailText>\n                    {infos[Lang][\"language\"]}\n                    </InfoDetailText>\n                    <InfoDetailText>\n                        <SourceLink>\n                        {infos[Lang][\"source\"]} <a href=\"https://github.com/yht0827/portfolio\">{infos[Lang][\"github\"]}</a>\n                        </SourceLink>\n                    </InfoDetailText>\n                </InfoDetail>\n                <BackButton onClick={() => changeMenu(false)}>{infos[Lang][\"back\"]}</BackButton>\n            </InfoWrapper>\n        </Information>\n    );\n};\n\nexport default Info;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useStore } from \"react-redux\";\nimport { bounce } from \"Components/Common/Keyframe\";\nimport { profiles } from \"Components/Main/data\";\n\nconst About = styled.div`\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  border-radius: 0px 0px 5px 5px;\n  background-color: #eee;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nconst ProfileImg = styled.img`\n    width: 150px;\n    border: 5px solid #fff;\n    border-radius: 50%;\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, .5);\n    @media only screen and (min-width: 320px) {\n      margin-top: 10%;\n    }\n    @media only screen and (min-width: 768px) {\n      margin-top: 8%;\n    }\n    @media only screen and (min-width: 1224px) {\n      margin-top: 60px;\n    }\n`;\n\nconst ProfileName = styled.div`\n    margin-top: 5px;\n    font-size: 1rem;\n    font-weight: bold;\n`;\n\nconst ProfileBirth = styled.div`\n    margin-top: 5px;\n    font-size: .8rem;\n`;\n\nconst ProfileMotto = styled.div`\n    margin-top: 15px;\n    font-size: 1rem;\n    font-weight: bold;\n    color: gray;\n    animation: ${bounce} 1s alternate infinite;\n`;\n\nconst ContentWrapper = styled.div`\n    margin-top: 1.2rem;\n`;\n\nconst ContentTitle = styled.div`\n    font-weight: bold;\n    font-size: 1.5rem;\n    margin-bottom: 3px;\n    color: ${props => props.color};\n`;\n\nconst ContentText = styled.div`\n    margin-bottom: 5px;\n    font-weight: bold;\n    font-size: 1rem;\n    color: ${props => props.color};\n`;\n\nconst BackButton = styled.button`\n      cursor: pointer;\n      outline: none;\n      border: none;\n      border-radius: 5px;\n      margin: 20px 0;\n      padding: 5px 10px;\n      box-shadow: 0px 0px 5px rgba(0, 0, 0, .2);\n      transition: .3s;\n      &:hover {\n        box-shadow: 0px 0px 10px rgba(0, 0, 0, .5);\n      }\n`;\n\nconst AboutMe = ({changeMenu}) => {\n\n    const Lang = useStore().getState().Lang.lang;\n\n    return (\n        <About>\n            <ProfileImg src=\"Images/Mario.jpg\" />\n            <ProfileName>{profiles[Lang][\"name\"]}</ProfileName>\n            <ProfileBirth>{profiles[Lang][\"birth\"]}</ProfileBirth>\n            <ProfileMotto>{profiles[Lang][\"motto\"]}</ProfileMotto>\n            <ContentWrapper>\n                <ContentTitle color=\"#e55039\">{profiles[Lang][\"grade\"]}</ContentTitle>\n                <ContentText color=\"#8395a7\">{profiles[Lang][\"uni\"]}</ContentText>\n            </ContentWrapper>\n            <ContentWrapper>\n                <ContentTitle color=\"#fa983a\">{profiles[Lang][\"major\"]}</ContentTitle>\n                { profiles[Lang].majors.map((major,index) => <ContentText key={index} color=\"#8395a7\">{major}</ContentText>)}\n            </ContentWrapper>\n            <ContentWrapper>\n                <ContentTitle color=\"#10ac84\">{profiles[Lang][\"certificate\"]}</ContentTitle>\n                { profiles[Lang].certificates.map((cert,index) => <ContentText key={index} color=\"#8395a7\">{cert}</ContentText> )}\n            </ContentWrapper>\n            <BackButton onClick={() => changeMenu(false)}>Back</BackButton>\n        </About>\n    );\n};\n\nexport default AboutMe;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Project } from \"Components/Project\";\nimport { Terminal } from \"Components/Terminal\";\nimport { Info } from \"Components/Info\";\nimport { AboutMe } from \"Components/AboutMe\";\nimport { folders } from \"Components/Main/data\";\n\nconst WindowWrapper = styled.div`\n  position: absolute;\n  padding: 0;\n  margin: 0;\n  margin: auto;\n  width: 45rem;\n  height: 40rem;\n  border-radius: 5px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);\n  transition: opacity 0.5s;\n  &.fade-enter{\n      opacity: 0;\n  }\n  &.fade-enter-active{\n      opacity: 1;\n  }\n  &.fade-exit {\n      opacity: 1;\n  }\n  &.fade-exit-active {\n      opacity: 0;\n  }\n\n  @media only screen and (min-width: 320px) {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: calc(100% - 80px);\n    -webkit-transform: none;\n       -moz-transform: none;\n        -ms-transform: none;\n         -o-transform: none;\n            transform: none;\n  }\n  @media only screen and (min-width: 768px) {\n    width: 65%;\n    height: 70%;\n    top: calc(50% - 50px);\n    left: 50%;\n    -webkit-transform: translate(-50%, -50%);\n       -moz-transform: translate(-50%, -50%);\n        -ms-transform: translate(-50%, -50%);\n         -o-transform: translate(-50%, -50%);\n            transform: translate(-50%, -50%);\n  }\n  @media only screen and (min-width: 1224px) {\n    width: 45rem;\n    height: 40rem;\n    top: calc(50% - 50px);\n    left: 50%;\n    -webkit-transform: translate(-50%, -50%);\n       -moz-transform: translate(-50%, -50%);\n        -ms-transform: translate(-50%, -50%);\n         -o-transform: translate(-50%, -50%);\n            transform: translate(-50%, -50%);\n  }\n`;\n\nconst Title = styled.div`\n    display: flex;\n    width: 100%;\n    height: 30px;\n    border-radius: 5px 5px 0 0;\n    background-color: #546e7a;\n`;\n\nconst CloseButton = styled.span`\n    cursor: pointer;\n    width: 14px;\n    height: 14px;\n    margin-top: 6px;\n    margin-left: 4px;\n    margin-right: 4px;\n    border-radius: 50%;\n    color: #860003;\n    background-color: #FC3C3F;\n    text-align: center;\n    line-height: 16px;\n`;\n\nconst Button = styled.span`\n    width: 14px;\n    height: 14px;\n    margin-top: 6px;\n    margin-right: 4px;\n    border-radius: 50%;\n    background-color: ${props => props.color};\n    text-align: center;\n    line-height: 16px;\n    &::before {\n    }\n`;\n\nconst TitleContent = styled.div`\n    height: 100%;\n    line-height: 30px;\n    color: #dbdee0;\n    font-weight: bold;\n\n    @media only screen and (min-width: 320px) {\n        margin-left: 35%;  \n    }\n\n    @media only screen and (min-width: 768px) {\n        margin-left: 40%;\n    }\n\n    @media only screen and (min-width: 1224px) {\n        margin-left: 40%;\n    }\n\n`;\n\nconst Window = ({ changeMenu, index, Lang }) => (\n      <WindowWrapper>\n                <Title>\n                <CloseButton onClick={() => changeMenu(false)} />\n                <Button color=\"#FEB525\"/>\n                <Button color=\"#2AC933\"/>\n                <TitleContent>{folders[index][Lang+\"-name\"]}</TitleContent>\n              </Title>\n              {index === 0 && <Project />}\n              {index === 1 && <AboutMe changeMenu={changeMenu} />}\n              {index === 2 && <Terminal changeMenu={changeMenu} />}\n              {index === 5 && <Info changeMenu={changeMenu} />}\n      </WindowWrapper>\n);\n\nexport default Window;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useStore } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Window from \"Components/Main/Window\";\nimport { folders } from \"Components/Main/data\";\n\nconst IconArea = styled.div`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 100%;\n`;\n\nconst IconWraper = styled.div`\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        max-width: 30rem;\n        padding: 1rem;\n`;\n\nconst IconContent = styled.div`\n  cursor: pointer;\n  width: 8rem;\n  height: 8rem;\n  padding: 1rem;\n  border-radius: 5px;\n  text-align: center;\n  &:hover {\n    background-color: rgba(0, 0, 0, .2);\n  }\n`; \n\nconst IconImg = styled.img`\n    width: 4rem;\n    height: 4rem;\n`;\n\nconst IconName = styled.div`\n    color: #fff;\n    text-shadow: 1px 1px 2px #000;\n`;\n\nconst CSSWrapper = styled.div`\n        transition: opacity 0.5s;\n        &.show-enter {\n            opacity: 0;\n        }\n        &.show-enter-active {\n            opacity: 1;\n        }\n        &.show-exit {\n            opacity: 1;\n        }\n        &.show-exit-active {\n            opacity: 0;\n        }\n`;\n\nconst Icon = () => {\n    const [index,setindex] = useState(0);\n    const [openMenu,setMenu] = useState(false);\n    const Lang = useStore().getState().Lang.lang;\n\n    const changeAction = (index) => {\n      \n        setindex(index);\n\n        if(index === 3){\n            window.open(\"https://github.com/yht0827\");\n        }else if(index === 4){\n            window.open(\"mailto:yangheetae0827@naver.com\");\n        }else{\n            openMenu? setMenu(false): setMenu(true);\n        }\n    };\n\n    const changeMenu = (value) => {\n        setMenu(value);\n    }\n\n    return (\n    <>\n    <IconArea>\n        <IconWraper>\n            { folders.map((folder, index) => \n                    <IconContent key={index} onClick={() => changeAction(index)}>\n                        <IconImg src={folder.image} />\n                        <IconName>{folder[Lang+\"-name\"]}</IconName>\n                    </IconContent>\n                )\n            }\n        </IconWraper>\n    </IconArea>\n        <CSSTransition in={openMenu} classNames=\"show\" timeout={500} unmountOnExit>\n        <CSSWrapper><Window index={index} changeMenu={changeMenu} Lang={Lang} /></CSSWrapper>\n        </CSSTransition>\n    </>\n)};\n\nexport default Icon;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { CSSTransition } from \"react-transition-group\";\nimport {startmenu } from \"Components/Main/data\";\nimport * as LangActions from \"redux/modules/Lang\";\n\nconst TaskBar = styled.div`\n    width: 100%;\n    height: 50px;\n    background-color: rgba(0, 0, 0, .3);\n    position: absolute;\n    left: 0;\n    bottom: 0;\n`;\n\nconst MenuButton = styled.button`\n      cursor: pointer;\n      width: 80px;\n      height: 100%;\n      color: #fff;\n      border: none;\n      outline: none;\n      font-weight: bold;\n      font-size: 1rem;\n      background-color: rgba(0, 0, 0, .2);\n      &:hover {\n        background-color: rgba(0, 0, 0, .4);\n      }\n`;\n\nconst MenuImg = styled.img`\n        width: 45px;\n        height: 45px;\n`;\n\nconst MenuTime = styled.div`\n      width: 90px;\n      height: 100%;\n      color: #fff;\n      line-height: 50px;\n      text-align: center;\n      font-size: 1rem;\n      float: right;\n      background-color: rgba(0, 0, 0, .2);\n`;\n\nconst StartMenu = styled.div`\n    position: absolute;\n    left: 0;\n    bottom: 50px;\n    background-color: rgba(0, 0, 0, .5);\n    color: #fff;\n    text-align: center;\n    transition: opacity 0.5s;\n\n    &.fade-enter {\n        opacity: 0;\n    }\n    &.fade-enter-active {\n        opacity: 1;\n    }\n    &.fade-exit {\n        opacity: 1;\n    }\n    &.fade-exit-active {\n        opacity: 0;\n    }\n\n    @media only screen and (min-width: 320px), (min-width: 768px) {\n      border-radius: 0;\n      height: 100%;\n      width: 100%;\n    }\n    @media only screen and (min-width: 1224px) {\n      width: 25rem;\n      height: 40rem;\n      border-top-right-radius: 10px;\n    }\n`;\n\nconst PowerImg = styled.img`\n    cursor: pointer;\n    margin-bottom: 2rem;\n    border-radius: 50%;\n    transition: .3s;\n\n    @media only screen and (min-width: 320px), (min-width: 768px) {\n        margin-top: 50%;\n      }\n      @media only screen and (min-width: 1224px) {\n        margin-top: 40%;\n      }\n      &:hover {\n        box-shadow: 0px 0px 20px rgba(255, 255, 255, 0.5);\n                transform: scale(1.1);\n      }\n`;\n\nconst PowerOffText = styled.div`\n    display: block;\n`;\n\nconst LanguageButtonArea = styled.div``;\n\nconst LanguageText = styled.div`\n        color: #fff;\n        margin-bottom: 16px;\n`;\n\nconst LanguageButton = styled.button`\n        cursor: pointer;\n        outline: none;\n        border: 1px solid #fff;\n        border-radius: 5px;\n        padding: 2px 6px;\n        color: #fff;\n        background-color: transparent;\n                transition: $transition-duration;\n        &:hover {\n          box-shadow: 0px 0px 10px rgba(255, 255, 255, .5);\n        }\n`;\n\nconst UnderBar = ({changeLog}) => {\n    const [openMenu, setMenu] = useState(false);\n    const [date, setDate] = useState(new Date());\n    const Lang = useSelector(state => state.Lang.lang);\n    const [items, setItems] = useState(startmenu[Lang]);\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        const Timer = setInterval(() => tick(),900);\n        return function Cleanup() { clearInterval(Timer); }\n    });\n\n    const changeAction = () => {\n        openMenu ? setMenu(false) : setMenu(true);\n    }\n\n    const tick = () => {\n        setDate(new Date());\n    };\n\n    const changeLang = () => {\n        if(Lang === \"kr\"){\n            dispatch(LangActions.changeLang({lang:\"en\"}));\n            setItems(startmenu.en);\n        }else if(Lang === \"en\"){\n            dispatch(LangActions.changeLang({lang:\"kr\"}));\n            setItems(startmenu.kr);\n        }\n    };\n\n    const getAP = (lang) => {\n        if(lang === \"en\"){\n          return date.getHours() < 12 ? \"AM\" : \"PM\"\n        }else if(lang === \"kr\"){\n          return date.getHours() < 12 ? \"오전\" : \"오후\"\n        }\n      };\n\n    return (\n    <>\n        <TaskBar>\n            <MenuButton onClick={changeAction}>\n                <MenuImg src=\"Images/window.png\" />\n            </MenuButton>\n            <MenuTime>\n                {Lang=== \"kr\" && getAP(Lang)}&nbsp;\n                {date.toLocaleTimeString(\"en-GB\",{hour:\"2-digit\",minute:\"2-digit\"})}&nbsp;\n                {Lang=== \"en\" && getAP(Lang)}\n            </MenuTime>\n        </TaskBar>\n        <CSSTransition in={openMenu} classNames=\"fade\" timeout={300} unmountOnExit>\n            <StartMenu>\n                <PowerImg src=\"Images/poweroff.png\" onClick={() => changeLog()} />\n                <PowerOffText>{items.power}</PowerOffText>\n                <LanguageButtonArea>\n                    <LanguageText>{items.langtext}</LanguageText>\n                    <LanguageButton onClick={() => changeLang()}>{items.lang}</LanguageButton>\n                </LanguageButtonArea>\n            </StartMenu>\n        </CSSTransition>\n    </>\n    );\n};\n\nexport default UnderBar;\n","import React,{ useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GlobalStyle } from \"Components/Common\";\nimport styled from \"styled-components\";\nimport { Icon, UnderBar } from \"Components/Main\"\nimport { Helmet } from \"react-helmet\";\nimport { Loginmenu } from \"Components/Main/data\";\nimport * as LangActions from \"redux/modules/Lang\";\nimport { bounce, spin } from \"Components/Common/Keyframe\";\nimport FadeIn from \"react-fade-in\";\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  font-family: \"NanumSquareRound\";\n  background: url(\"Images/background.jpg\") center;\n  background-size: cover;\n`;\n\nconst Main = styled.div`\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    transition: opacity 0.5s;\n        &.show-enter {\n            opacity: 0;\n        }\n        &.show-enter-active {\n            opacity: 1;\n        }\n        &.show-exit {\n            opacity: 1;\n        }\n        &.show-exit-active {\n            opacity: 0;\n        }\n`;\n\nconst Desktop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    padding-bottom: 50px;\n    overflow-y: auto;\n`;\n\nconst Login = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.6);\n`;\n\nconst UserProfile = styled.div`\n    width: 100%;\n    text-align: center;\n    @media only screen and (min-width: 320px), (min-width: 768px) {\n      margin-top: 25%;\n    }\n    @media only screen and (min-width: 1224px) {\n      margin-top: 15%;\n    }\n`;\n\nconst ProfileImg = styled.img`\n      width: 150px;\n      height: 150px;\n      border-radius: 50%;\n      border: 3px solid #fff;\n      background-color: #fff;\n      animation: ${props=> props.ani === true && spin} 1.7s linear infinite;\n      margin-bottom: 5px;\n`;\n\nconst ProfileName = styled.p`\n      color: #fff;\n      font-weight: bold;\n      font-size: 2rem;\n`;\n\nconst ButtonArea = styled.div`\n    margin: auto;\n    margin-top: 30px;\n    text-align: center;\n`;\n\nconst StyledButton = styled.button`\n      cursor: pointer;\n      border: 1px solid #fff;\n      border-radius: 5px;\n      background-color: rgba(0, 0, 0, 0);\n      outline: none;\n      color: #fff;\n      font-weight: bold;\n      padding: 10px 20px;\n      transition: 0.3s;\n      &:hover {\n        background-color: rgba(255, 255, 255, 0.2);\n        color: #eee;\n      }\n`;\n\nconst LoginMessage = styled.div`\n      width: 100%;\n      font-weight: bold;\n      font-size: 1.5rem;\n      color: #D980FA;\n      text-align: center;\n`;\n\nconst LangMessage = styled.div`\n      width: 100%;\n      font-weight: bold;\n      font-size: 1.3rem;\n      color: #fff;\n      text-align: center;\n      animation: ${bounce} 1s alternate infinite;\n      margin-bottom: 5px;\n`;\n\nconst TimeArea = styled.div`\n    position: absolute;\n    bottom: 0;\n    margin: 20px;\n    color: #fff;\n`;\n\nconst Timer = styled.div`\n    font-weight: bold;\n    @media only screen and (min-width: 320px) {\n        font-size: 2.5rem;\n      }\n      @media only screen and (min-width: 768px), (min-width: 1224px) {\n        font-size: 4rem;\n      }\n`;\n\nconst TimeAP = styled.b`\n        font-size: 1.5rem;\n`;\n\nconst DateArea = styled.div`\n      @media only screen and (min-width: 320px) {\n        font-size: 1rem;\n      }\n      @media only screen and (min-width: 768px), (min-width: 1224px) {\n        font-size: 1.5rem;\n      }\n`;\n\nconst App = () => {\n    const [date, setDate] = useState(new Date());\n    const [clickBt,setBt] = useState(false);\n    const Lang = useSelector(state => state.Lang.lang);\n    const isLogged = useSelector(state => state.Lang.isLogged);\n    const dispatch = useDispatch();\n    \n    const changeLog = () => {\n      if(isLogged){\n        setBt(false);\n        setTimeout(() => dispatch(LangActions.changeLog({isLogged:false})),2000);\n      }else{\n        setBt(true);\n        setTimeout(() => dispatch(LangActions.changeLog({isLogged:true})),2500);\n\n      }\n    };\n\n    const getDate = (lang) => {\n      if(lang === \"en\"){\n        return `${Loginmenu.en.day[date.getDay()]}, ${date.getDate()} ${Loginmenu.en.month[date.getMonth()]}`;\n      }else{\n        return `${Loginmenu.kr.month[date.getMonth()]} ${date.getDate()}일 ${Loginmenu.kr.day[date.getDay()]}`;\n      }\n    };\n\n    const getAP = (lang) => {\n      if(lang === \"en\"){\n        return date.getHours() < 12 ? \"AM\" : \"PM\"\n      }else if(lang === \"kr\"){\n        return date.getHours() < 12 ? \"오전\" : \"오후\"\n      }\n    };\n\n    const tick = () => {\n      setDate(new Date());\n    };\n\n    const ChangeLang = () => {\n      if(Lang === \"en\"){\n        dispatch(LangActions.changeLang({lang:\"kr\"}));\n        getDate(\"kr\");\n        getAP(\"kr\");\n        setDate(new Date());\n      }else if(Lang === \"kr\"){\n        dispatch(LangActions.changeLang({lang:\"en\"}));\n        getDate(\"en\");\n        getAP(\"en\");\n        setDate(new Date());\n      }     \n};\n\n  useEffect(() => {\n    const Timer = setInterval(() => tick(),900);\n    return function Cleanup() { clearInterval(Timer); }\n  });\n  \n    return (\n    <>\n    <Helmet>\n         <title>Portfolio</title>\n    </Helmet>\n    <Background>\n      <FadeIn delay={300} transitionDuration={700}>\n                  <Main>\n        { isLogged ?\n              <>\n                    <Desktop>\n                      <Icon />\n                    </Desktop>\n                    <UnderBar changeLog={changeLog} />\n              </>\n                :\n              <Login>\n                  <UserProfile>\n                      <ProfileImg src=\"Images/Mario.jpg\" ani={clickBt} />\n                      <ProfileName>{Loginmenu[Lang].name}</ProfileName>\n                  </UserProfile>\n                  <ButtonArea>\n                 { clickBt ? <LoginMessage>{Loginmenu[Lang].hello}</LoginMessage>\n                   : <StyledButton onClick={() => changeLog()}>{Loginmenu[Lang].login}</StyledButton> \n                 }\n                  </ButtonArea>\n                   <ButtonArea>\n                      <LangMessage onClick={() => ChangeLang()}>{Loginmenu[Lang].langtext}</LangMessage>\n                   </ButtonArea>\n                  <TimeArea>\n                      <Timer>\n                          {date.toLocaleTimeString(\"en-US\", { hour12: false })}\n                          <TimeAP>{getAP(Lang)}</TimeAP>\n                      </Timer>\n                      <DateArea>{getDate(Lang)}</DateArea>\n                  </TimeArea>\n              </Login>\n            }\n            </Main>\n            </FadeIn>\n      <GlobalStyle />\n    </Background>\n    </>\n    )\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\"\nimport configureStore from \"redux/configureStore\";\nimport App from \"App\";\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}