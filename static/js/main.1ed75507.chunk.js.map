{"version":3,"sources":["redux/modules/Lang.js","redux/modules/index.js","redux/configureStore.js","Components/Common/GlobalStyle.js","Components/Main/data.js","Components/Project/Item.js","Components/Project/Project.js","Components/Terminal/Terminal.js","Components/Chrome/Chrome.js","Components/Common/Keyframe.js","Components/Info/Info.js","Components/AboutMe/AboutMe.js","Components/Main/Window.js","Components/Main/Icon.js","Components/Main/UnderBar.js","App.js","index.js"],"names":["changeLang","createAction","changeLog","reducer","handleActions","state","action","lang","payload","isLogged","applyPenders","combineReducers","Lang","pender","penderReducer","composeEnhancers","compose","midleware","penderMiddleware","configureStore","createStore","modules","applyMiddleware","GlobalStyle","createGlobalStyle","reset","Dir","folders","startmenu","power","langtext","Loginmenu","name","login","hello","time","day","month","infos","title","developer","enddate","language","source","github","back","profiles","birth","motto","grade","uni","major","majors","certificate","certificates","projects","img","infotext","year","showpage","ItemWrapper","styled","div","ItemTitle","ItemMoreButton","button","ItemFrame","ItemImage","ItemInfo","ItemInfoText","ItemDate","props","color","ItemInfoTextColor","b","ItemUsedLang","Item","useStore","getState","map","project","index","key","src","text","subindex","onClick","url","window","open","Content","ProjectView","Project","TerminalWrapper","CommandArea","CommandWrapper","Command","CommandResult","pre","command","CommandUser","CommandInput","input","Terminal","changeMenu","useState","setcommand","CommandArr","setArr","commandExec","value","toLowerCase","result","en","kr","Date","toGMTString","toLocaleString","commandCheck","com","autoFocus","type","onChange","event","target","onKeyPress","charCode","Browser","BrowserTop","BrowserAddressBar","ImageArea","GoogleImage","SearchArea","SearchInput","ButtonArea","ChromeButton","Chrome","search","setsearch","onSearch","disabled","spin","keyframes","bounce","scale","Information","InfoWrapper","InfoLogo","InfoDetail","InfoDetailTitle","InfoDetailText","SourceLink","BackButton","LogoWrapper","Info","href","About","ProfileImg","ProfileName","ProfileBirth","ProfileMotto","ContentWrapper","ContentTitle","ContentText","AboutMe","cert","WindowWrapper","Title","CloseButton","span","Button","TitleContent","Window","IconArea","IconWraper","IconContent","IconImg","IconName","CSSWrapper","Icon","setindex","openMenu","setMenu","folder","changeAction","image","CSSTransition","in","classNames","timeout","unmountOnExit","TaskBar","MenuButton","MenuImg","MenuTime","StartMenu","PowerImg","PowerOffText","LanguageButtonArea","LanguageText","LanguageButton","UnderBar","date","setDate","useSelector","items","setItems","dispatch","useDispatch","useEffect","Timer","setInterval","tick","clearInterval","getAP","getHours","toLocaleTimeString","hour","minute","LangActions","Background","Main","Desktop","Login","UserProfile","ani","p","StyledButton","LoginMessage","LangMessage","TimeArea","TimeAP","DateArea","App","clickBt","setBt","setTimeout","getDate","getDay","getMonth","Helmet","delay","transitionDuration","hour12","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ed75507.chunk.js","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\r\nimport { applyPenders } from \"redux-pender\";\r\n\r\n// actions types\r\n\r\nconst CHANGE_LANG = \"CHANGE_LANG\";\r\nconst CHANGE_LOG = \"CHANGE_LOG\";\r\n\r\n// action creators\r\n\r\nexport const changeLang = createAction(CHANGE_LANG);\r\nexport const changeLog = createAction(CHANGE_LOG);\r\n\r\n// initial state\r\n\r\nconst initialState = {\r\n    lang: \"kr\",\r\n    isLogged: false,\r\n};\r\n\r\n// reducer\r\n\r\nconst reducer = handleActions({\r\n        [CHANGE_LANG] : (state, action) => {\r\n                const { lang } = action.payload;\r\n        return {\r\n            ...state,\r\n            lang\r\n        }\r\n    },\r\n        [CHANGE_LOG] : (state, action) => {\r\n            const { isLogged } = action.payload;\r\n        return {\r\n            ...state,\r\n            isLogged\r\n        }\r\n    },\r\n\r\n},initialState);\r\n\r\nexport default applyPenders(reducer,[]);\r\n","import { combineReducers } from \"redux\";\r\nimport { penderReducer } from \"redux-pender\";\r\nimport Lang from \"redux/modules/Lang\";\r\n\r\nexport default combineReducers({\r\n    Lang,\r\n    pender: penderReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport penderMiddleware from \"redux-pender\";\r\nimport modules from \"redux/modules\";\r\n\r\nconst isDevelopment = process.env.NODE_ENV === \"development\";\r\nconst composeEnhancers = isDevelopment? (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose) : compose;\r\nconst midleware = [penderMiddleware()];\r\n\r\nif(isDevelopment){\r\n    const { logger } = require(\"redux-logger\");\r\n    midleware.push(logger);\r\n}\r\n\r\nconst configureStore = () => {\r\n    const store = createStore(modules, composeEnhancers(\r\n            applyMiddleware(...midleware)\r\n        ));\r\n            return store;\r\n}\r\n\r\nexport default configureStore;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n${reset};\r\n\r\n    @font-face {\r\n            font-family: \"NanumSquareRound\";\r\n            src:url(\"fonts/NanumSquareRoundR.eot\");\r\n            src:url(\"fonts/NanumSquareRoundR.eot#iefix\") format(\"embedded-opentype\"),\r\n            url(\"fonts/NanumSquareRoundR.woff\") format(\"woff\"),\r\n            url(\"fonts/NanumSquareRoundR.ttf\") format(\"truetype\");\r\n    }\r\n    \r\n    * {\r\n    box-sizing: border-box;\r\n    -webkit-overflow-scrolling: touch;\r\n    }\r\n\r\n    html, body {\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    }\r\n\r\n    div {\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: -moz-none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","const Dir = \"Images/Icons/\";\r\nconst folders = [\r\n    {   \r\n        \"kr-name\": \"프로젝트\",\r\n        \"en-name\": \"Projects\",\r\n        \"image\": Dir+\"folder.png\" \r\n    },\r\n    {\r\n        \"kr-name\": \"프로필\",\r\n        \"en-name\": \"Profile\",\r\n        \"image\": Dir+\"Me.png\"\r\n    },\r\n    {\r\n        \"kr-name\": \"터미널\",\r\n        \"en-name\": \"Terminal\",\r\n        \"image\": Dir+\"terminal.png\"\r\n    }, \r\n    {\r\n        \"kr-name\": \"깃허브\",\r\n        \"en-name\": \"Github\",\r\n        \"image\": Dir+\"github.png\"\r\n    },\r\n    {\r\n        \"kr-name\": \"브라우저\",\r\n        \"en-name\": \"Browser\",\r\n        \"image\": Dir+\"chrome.png\"\r\n    },\r\n    {\r\n        \"kr-name\": \"오픈채팅\",\r\n        \"en-name\": \"OpenChat\",\r\n        \"image\": Dir+\"kakao.png\"\r\n    },\r\n    {\r\n        \"kr-name\": \"이메일\",\r\n        \"en-name\": \"Email\",\r\n        \"image\": Dir+\"email.png\"\r\n    },\r\n    {\r\n        \"kr-name\": \"정보\",\r\n        \"en-name\": \"Information\",\r\n        \"image\": Dir+\"information.png\"\r\n    },  \r\n];\r\n\r\nconst startmenu = {\r\n     \"en\" : {\r\n        lang:\"Korean\",\r\n        power:\"PowerOff\",\r\n        langtext:\"Change language\"\r\n     },\r\n    \"kr\" : {\r\n        lang:\"영어\",\r\n        power:\"종료\",\r\n        langtext:\"언어 변경\"\r\n    },\r\n}\r\n\r\nconst Loginmenu = {\r\n    \"en\" : {\r\n        name: \"YHT\",\r\n        login: \"Login\",\r\n        hello: \"Hello!\",\r\n        langtext: \"Click to Change language\",\r\n        time: [\"AM\",\"PM\"],\r\n        day: ['Sun', 'Mon', 'Thu', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n        month: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n    },\r\n    \"kr\" : {\r\n        name: \"양희태\",\r\n        login: \"로그인\",\r\n        hello: \"안녕하세요!\",\r\n        langtext: \"언어 변경\",\r\n        time: [\"오전\",\"오후\"],\r\n        day: [\"일요일\", \"월요일\", \"화요일\", \"수요일\", \"목요일\", \"금요일\", \"토요일\"],\r\n        month: [\"1월\",\"2월\",\"3월\",\"4월\",\"5월\",\"6월\",\"7월\",\"8월\",\"9월\",\"10월\",\"11월\",\"12월\"]\r\n    },\r\n}\r\n\r\nconst infos = {\r\n   \"en\": {\r\n    title: \"React.js Portfolio\",\r\n    developer: \"Developer : \",\r\n    name: \"YHT\",\r\n    enddate: \"Development end date : \",\r\n    language: \"Languages : React Hooks\",\r\n    source : \"Source code : \",\r\n    github : \"Github\",\r\n    back : \"back\"\r\n    },\r\n    \"kr\":{\r\n        title: \"리액트 기반 포트폴리오\",\r\n        developer: \"개발자 : \",\r\n        name: \"양희태\",\r\n        enddate: \"개발 완료 : \",\r\n        language: \"사용언어 : 리액트\",\r\n        source : \"소스 코드 : \",\r\n        github : \"깃 허브\",\r\n        back : \"뒤로 가기\"\r\n    },\r\n};\r\n\r\nconst profiles = {\r\n    \"en\" : {\r\n        name : \"YangHeeTae\",\r\n        birth : \"Birthday 1992.08.27\",\r\n        motto : \"Motto: Where there is a will there is a way\",\r\n        grade : \"Education\",\r\n        uni : \"Catholic University of Korea\",\r\n        major : \"Major\",\r\n        majors: [\"Information and Communications\", \"Computer Engineering\"],\r\n        certificate: \"Certificate\",\r\n        certificates:[\"Engineer information security\",\"Engineer Information Processing\",\"SQLD\",\"CSTS(FL)\",\"Computer Usage Literacy(1 Grade)\"],\r\n    },\r\n    \"kr\" : {\r\n        name : \"양희태\",\r\n        birth : \"생년월일 1992.08.27\",\r\n        motto : \"좌우명: 뜻이 있는 곳에 길이 있다.\",\r\n        grade : \"학력\",\r\n        uni : \"가톨릭대학교\",\r\n        major : \"전공\",\r\n        majors: [\"정보통신전자공학\", \"컴퓨터공학\"],\r\n        certificate: \"자격증\",\r\n        certificates:[\"정보보안기사\",\"정보처리기사\",\"SQL개발자(SQLD)\",\"SW 테스트 전문가(일반)\",\"컴퓨터 활용능력(1급)\"],\r\n    },\r\n};\r\n\r\nconst commandCheck = (command) => {\r\n\r\n    let result = [];\r\n\r\n    if(command === \"ls\"){\r\n        result = {\r\n            command:command,\r\n            en:[`Project    AboutMe    Terminal    Github`,\r\n            `Browser    OpenChat    Email    Information`],\r\n            kr:[`프로젝트    내정보    터미널    깃허브`,\r\n            `브라우저    오픈채팅    이메일    정보`],\r\n        };\r\n    }else if(command === \"pwd\"){\r\n        result = {\r\n            command:command,\r\n            en:[`/home/HT`],\r\n            kr:[`/home/희태`],\r\n        };\r\n    }else if(command === \"ls -l\" || command === \"ll\"){\r\n        result = {\r\n            command:command,\r\n            en:[`drwxr-xr-x 2 HT HT 4096 Jul 09:22 Project`,\r\n                    `drwxr-xr-x 2 HT HT 4096 Sep 05:08 AboutMe`,\r\n                    \"-rwxr-xr-x 1 HT HT   16 Sep 07:17 Terminal\",\r\n                    `-rwxr-xr-x 1 HT HT  660 Jun 08:44 Github`,\r\n                    `-rwxr-xr-x 1 HT HT  631 Jul 18:42 Browser`,\r\n                    `-rwxr-xr-x 1 HT HT  542 Aug 16:50 OpenChat`,\r\n                    `-rwxr-xr-x 1 HT HT  168 Jun 15:35 Email`,\r\n                    `drwxr-xr-x 2 HT HT 4096 Jul 10:51 Information`],\r\n            kr:[`drwxr-xr-x 2 HT HT 4096 7월 09:22 프로젝트`,\r\n            `drwxr-xr-x 2 HT HT 4096 9월 05:08 내정보`,\r\n            \"-rwxr-xr-x 1 HT HT   16 9월 07:17 터미널\",\r\n            `-rwxr-xr-x 1 HT HT  660 6월 08:44 깃허브`,\r\n            `-rwxr-xr-x 1 HT HT  631 7월 18:42 브라우저`,\r\n            `-rwxr-xr-x 1 HT HT  542 8월 16:50 오픈채팅`,\r\n            `-rwxr-xr-x 1 HT HT  168 6월 15:35 이메일`,\r\n            `drwxr-xr-x 2 HT HT 4096 7월 10:51 정보`],\r\n        };\r\n    }else if(command === \"ls -al\"){\r\n        result = {\r\n            command:command,\r\n            en:[`drwxr-xr-x 2 HT HT 4096 May 19:50 .`,\r\n                    `drwxr-xr-x 4 HT HT 4096 May 19:50 ..`,\r\n                    `drwxr-xr-x 2 HT HT 4096 Jul 09:22 Project`,\r\n                    `drwxr-xr-x 2 HT HT 4096 Sep 05:08 AboutMe`,\r\n                    \"-rwxr-xr-x 1 HT HT   16 Sep 07:17 Terminal\",\r\n                    `-rwxr-xr-x 1 HT HT  660 Jun 08:44 Github`,\r\n                    `-rwxr-xr-x 1 HT HT  631 Jul 18:42 Browser`,\r\n                    `-rwxr-xr-x 1 HT HT  542 Aug 16:50 OpenChat`,\r\n                    `-rwxr-xr-x 1 HT HT  168 Jun 15:35 Email`,\r\n                    `drwxr-xr-x 2 HT HT 4096 Jul 10:51 Information`],\r\n            kr:[`drwxr-xr-x 2 HT HT 4096 5월 19:50 .`,\r\n            `drwxr-xr-x 4 HT HT 4096 5월 19:50 ..`,\r\n            `drwxr-xr-x 2 HT HT 4096 7월 09:22 프로젝트`,\r\n            `drwxr-xr-x 2 HT HT 4096 9월 05:08 내정보`,\r\n            \"-rwxr-xr-x 1 HT HT   16 9월 07:17 터미널\",\r\n            `-rwxr-xr-x 1 HT HT  660 6월 08:44 깃허브`,\r\n            `-rwxr-xr-x 1 HT HT  631 7월 18:42 브라우저`,\r\n            `-rwxr-xr-x 1 HT HT  542 8월 16:50 오픈채팅`,\r\n            `-rwxr-xr-x 1 HT HT  168 6월 15:35 이메일`,\r\n            `drwxr-xr-x 2 HT HT 4096 7월 10:51 정보`],\r\n        };\r\n    }else if(command === \"date\"){\r\n        result = {\r\n            command:command,\r\n            en:[new Date().toGMTString()],\r\n            kr:[new Date().toLocaleString(\"ko-Kr\")],\r\n        };\r\n    }else if(command === \"whoami\"){\r\n        result = {\r\n            command:command,\r\n            en:[\"HT\"],\r\n            kr:[\"희태\"],\r\n        };   \r\n    }else{\r\n        result = {\r\n            command:command,\r\n            en:[`${command}: Command Not found`],\r\n            kr:[`${command}: 명령을 찾을 수 없습니다`]\r\n        };\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nconst projects = {\r\n    \"en\" : {\r\n        \"projects\":[{\r\n            title:\"Java Pos System\",\r\n            img:\"Images/projects/POS.png\",\r\n            lang:\"Java Swing\",\r\n            infotext:[\"Login, Table, Menu, Sales\",\"Understand to real POS system with Java\"],\r\n            year:\"2018\",\r\n            showpage:\"https://github.com/yht0827/projects/tree/master/JavaProject\",\r\n        },{\r\n            title:\"Train booking site\",\r\n            img:\"Images/projects/HRT.png\",\r\n            lang:\"Java, Jsp, Jquery, BootStrap(CSS), OracleDB\",\r\n            infotext:[\"JOIN, LOGIN, DESTINATION, BOOK, CANCEL, CHECK\",\"Make Real Train Booking site with Java\"],\r\n            year:\"2018\",\r\n            showpage:\"https://github.com/yht0827/projects/tree/master/HRT_Proj\",\r\n        },{\r\n            title:\"Youtube site\",\r\n            img:\"Images/projects/Youtube.png\",\r\n            lang:\"Javascript(ES6), Pug(Jade), Node, Express, MongoDB\",\r\n            infotext:[\"Login, Join, Video Player,Video Record, Video Upload\",\"Cloning Youtube Page with Javascript\"],\r\n            year:\"2019\",\r\n            showpage:\"https://github.com/yht0827/youtube-clone\",\r\n        },{\r\n            title:\"Certificate Management Platform\",\r\n            img:\"Images/projects/Platform.png\",\r\n            lang:\"HyperLedger, React(Recompose, Redux), Nodejs(Fabric Network)\",\r\n            infotext:[\"Using Private BlockChain HyperLedger for Certificate Management\",\"Request Certificate Data When Special Status is Active\"],\r\n            year:\"2019\",\r\n            showpage:\"https://github.com/yht0827/JobSearchPlatform\",\r\n        }]\r\n    },\r\n    \"kr\" : {\r\n        \"projects\":[{\r\n            title:\"자바 POS 정산 시스템\",\r\n            img:\"Images/projects/POS.png\",\r\n            lang:\"자바 스윙\",\r\n            infotext:[\"로그인, 테이블선택, 메뉴선택, 매출화면을 구현\",\"실제 POS시스템 기능을 구현하고 JAVA의 전반적으로 이해\"],\r\n            year:\"2018\",\r\n            showpage:\"https://github.com/yht0827/projects/tree/master/JavaProject\",\r\n        },{\r\n            title:\"고속 열차 예매 사이트\",\r\n            img:\"Images/projects/HRT.png\",\r\n            lang:\"자바, JSP, 제이쿼리, 부트스트랩(CSS), 오라클DB\",\r\n            infotext:[\"회원가입, 로그인, 목적지 선택, 예약, 예약취소, 예약확인 등\",\"실제 고속열차 예매 사이트를 기반으로 구현\"],\r\n            year:\"2018\",\r\n            showpage:\"https://github.com/yht0827/projects/tree/master/HRT_Proj\",\r\n        },{\r\n            title:\"유튜브 사이트\",\r\n            img:\"Images/projects/Youtube.png\",\r\n            lang:\"자바스크립트(ES6), 퍼그, 노드 ,익스프레스, 몽고DB\",\r\n            infotext:[\"로그인, 회원가입, 비디오 플레이어, 비디오 촬영, 업로드 등을 구현\",\"실제 유튜브 사이트를 기반으로 구현\"],\r\n            year:\"2019\",\r\n            showpage:\"https://github.com/yht0827/youtube-clone\",\r\n        },{\r\n            title:\"블록체인 기반 자격증 관리 플랫폼\",\r\n            img:\"Images/projects/Platform.png\",\r\n            lang:\"하이퍼레저, 리액트(Recompose, Redux), 노드(패브릭 네트워크)\",\r\n            infotext:[\"하이퍼레저를 이용한 프라이빗 블록체인으로 이력관리 플랫폼을 제작\",\"상황에 따라 블록체인에 배포한 자격증을 요청 할 수 있다.\"],\r\n            year:\"2019\",\r\n            showpage:\"https://github.com/yht0827/JobSearchPlatform\",\r\n        }]\r\n    },\r\n};\r\n\r\nexport { folders, startmenu, Loginmenu, infos, profiles, projects, commandCheck };","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useStore } from \"react-redux\";\r\nimport { projects } from \"Components/Main/data\";\r\n\r\nconst ItemWrapper = styled.div`\r\nwidth: 90%;\r\nmargin: 20px auto;\r\npadding: 20px 0;\r\nbackground-color: #ffeaa7;\r\nborder-radius: 20px;\r\nbox-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst ItemTitle = styled.div`\r\nmargin: 10px 0;\r\nfont-size: 2.5rem;\r\nfont-weight: bold;\r\ncolor: dodgerblue;\r\n@media only screen and (min-width: 320px), (max-width: 768px) {\r\n        font-size: 1.8rem;\r\n    }\r\n    @media only screen and (min-width: 1224px) {\r\n        font-size: 2.5rem;\r\n    }\r\n`;\r\n\r\nconst ItemMoreButton = styled.button`\r\n    cursor: pointer;\r\n    outline: none;\r\n    border: 1px solid #0984e3;\r\n    border-radius: 5px;\r\n    padding: 5px 10px;\r\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, .2);\r\n    font-weight: bold;\r\n    background-color: transparent;\r\n    color: #0984e3;\r\n    &:hover {\r\n      box-shadow: 0px 0px 10px rgba(0, 0, 0, .5);\r\n    }\r\n`;\r\nconst ItemFrame = styled.div`\r\n    @media only screen and (min-width: 320px), (max-width: 768px) {\r\n      width: 100%;\r\n      min-height: 14rem;\r\n    }\r\n    @media only screen and (min-width: 1224px) {\r\n      width: 100%;\r\n      min-height: 22.5rem;\r\n    }\r\n`;\r\n\r\nconst ItemImage = styled.img`\r\n    border-radius: 10px;\r\n    box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.4);\r\n    @media only screen and (min-width: 320px), (max-width: 768px) {\r\n      width: 80%;\r\n    }\r\n    @media only screen and (min-width: 1224px) {\r\n      width: 80%;\r\n    }\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n    margin: 10px 0px;\r\n`;\r\nconst ItemInfoText = styled.div`\r\n    margin-top: 2px;\r\n    padding: 5px;\r\n    font-weight: bold;\r\n`;\r\nconst ItemDate = styled.div`\r\n    padding: 5px;\r\n    color: ${props=> props.color};\r\n    font-weight: bold;\r\n`;\r\nconst ItemInfoTextColor = styled.b`\r\n    color: ${props=> props.color};\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst ItemUsedLang = styled.div`\r\n    padding: 0;\r\n    margin: 10px 0;\r\n    font-size: 1.3rem;\r\n    font-weight: bold;\r\n    color: #8e44ad;\r\n    @media only screen and (min-width: 320px), (max-width: 768px) {\r\n        font-size: 1rem;\r\n    }\r\n    @media only screen and (min-width: 1224px) {\r\n        font-size: 1.3rem;\r\n    }\r\n`;\r\n\r\nconst Item = () => {\r\n  const Lang = useStore().getState().Lang.lang;\r\n  const showPage = (url) => {\r\n      window.open(url);\r\n  };\r\n\r\n  return(\r\n        projects[Lang][\"projects\"].map((project, index)=>\r\n            <ItemWrapper key={index}>\r\n                <ItemTitle>{project.title}</ItemTitle>\r\n                <ItemFrame>\r\n                    <ItemImage src={project.img} />\r\n                </ItemFrame>\r\n                <ItemUsedLang >{project.lang}</ItemUsedLang>\r\n                <ItemInfo>\r\n                  <ItemInfoTextColor color=\"#2ecc71\">{Lang === \"en\"? \"Information\":\"정보\"}</ItemInfoTextColor>  \r\n                    { project.infotext.map((text,subindex) => <ItemInfoText key={subindex}>{text}</ItemInfoText>)}\r\n                </ItemInfo>\r\n                <ItemInfo>\r\n                  <ItemInfoTextColor color=\"#e74c3c\">{Lang === \"en\"? \"Date\":\"날짜\"}</ItemInfoTextColor>  \r\n                  <ItemDate color=\"#2980b9\">{project.year}</ItemDate>\r\n                </ItemInfo> \r\n                <ItemMoreButton onClick={() => showPage(project.showpage)}>{Lang === \"en\"? \"More\":\"더보기\"}</ItemMoreButton>\r\n            </ItemWrapper>)\r\n    )\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Item from \"Components/Project/Item\";\r\n\r\nconst Content = styled.div`\r\nposition: absolute;\r\ntop: 30px;\r\nbottom: 0;\r\nleft: 0;\r\nright: 0;\r\noverflow-y: auto;\r\n`;\r\n\r\nconst ProjectView = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  text-align: center;\r\n  border-radius: 0px 0px 5px 5px;\r\n  overflow-y: auto;\r\n  background-color: #eee;\r\n`;\r\n\r\nconst Project = () => {\r\n    \r\n   return(\r\n            <Content>\r\n                <ProjectView>\r\n                    <Item />\r\n                </ProjectView>\r\n            </Content>\r\n    )\r\n};\r\n\r\nexport default Project;\r\n","import React, { useState } from \"react\";\r\nimport { useStore } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { commandCheck } from \"Components/Main/data\";\r\n\r\nconst TerminalWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 5px;\r\n    background-color: rgba(48, 10, 36, 1);\r\n    border-radius: 0px 0px 5px 5px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst CommandArea = styled.div`\r\n    padding: 0 5px;\r\n    color: #fff;\r\n`;\r\n\r\nconst CommandWrapper = styled.div`\r\n`;\r\n\r\nconst Command = styled.div`\r\n    font-size: 19px;\r\n`;\r\n\r\nconst CommandResult = styled.pre`\r\n    color: ${props => props.command === \"ls\" && \"#3498db\"};\r\n    font-style: ${props => props.command === \"ls\" && \"italic\"};\r\n    font-family: ${props => (props.command === \"ls -al\" || props.command === \"ls -l\" || props.command === \"ll\")  && \"monospace\"};\r\n`;\r\n\r\nconst CommandUser = styled.b`\r\n      color: lawngreen;\r\n`;\r\n\r\nconst CommandInput = styled.input`\r\n        width: 50%;\r\n        outline: none;\r\n        border: none;\r\n        border-radius: 5px;\r\n        background-color: rgba(255, 255, 255, 0.2);\r\n        color: #fff;\r\n        font-size: 1rem;\r\n        padding: 2px 5px;\r\n`;\r\n\r\nconst Terminal = ({changeMenu}) => {\r\n\r\n    const [command,setcommand] = useState(\"\");\r\n    const [CommandArr,setArr] = useState([]);\r\n    const Lang = useStore().getState().Lang.lang;\r\n\r\n    const handleChange = e => {\r\n        setcommand(e.target.value);\r\n    };\r\n\r\n    const commandExec = (value) => {\r\n        const command = value.toLowerCase();\r\n        if(command === \"clear\"){\r\n            setArr([]);\r\n        }else if(command === \"exit\"){\r\n            changeMenu(false);\r\n        }else{\r\n            const result = commandCheck(command);\r\n            setArr(CommandArr => [...CommandArr,result]);\r\n        }\r\n       setcommand(\"\");\r\n    };\r\n\r\n    const handleKey = e => {\r\n        if(e.charCode === 13){\r\n         commandExec(command);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <TerminalWrapper>\r\n            <CommandArea>\r\n               {CommandArr.map((com,index) => {\r\n                 return (    \r\n                     <CommandWrapper key={index}>    \r\n                    <Command>\r\n                        <CommandUser>HT@ubuntu</CommandUser>:~$&nbsp;{com.command}\r\n                    </Command>\r\n                    {  com[Lang].map((result,subindex) =>\r\n                       <CommandResult command={com.command} key={subindex}>{result}</CommandResult>)}\r\n                    </CommandWrapper>\r\n                    );\r\n                    }\r\n                    )\r\n                }\r\n                    <Command>\r\n                        <CommandUser>HT@ubuntu</CommandUser>:~$&nbsp;\r\n                        <CommandInput autoFocus type=\"text\" value={command} onChange={event => handleChange(event)} onKeyPress={event => handleKey(event)} />\r\n                    </Command>\r\n            </CommandArea>\r\n        </TerminalWrapper>\r\n    );\r\n};\r\n\r\nexport default Terminal;\r\n","import React, { useState } from \"react\";\r\nimport { useStore } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Browser = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 0px 0px 5px 5px;\r\n    background-color: #fff;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst BrowserTop = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 6%;\r\n    background-color: #eee;\r\n    border-bottom: 1px solid gray;\r\n`;\r\n\r\nconst BrowserAddressBar = styled.input`\r\n        width: 100%;\r\n        height: 60%;\r\n        padding: 5px 10px;\r\n        margin: 7px 5px;\r\n        border-radius: 5px;\r\n        border: 1px solid ;\r\n        font-weight: bold;\r\n        font-size: 0.83rem;\r\n        background-color: #ecf0f1;\r\n        color: #2f3640;\r\n`;\r\n\r\nconst ImageArea = styled.div`\r\n    width: 100%;\r\n    background-color: #fff;\r\n    text-align: center;\r\n`;\r\n\r\nconst GoogleImage = styled.img`\r\n      width: 20rem;\r\n      margin: 7rem 0 3rem 0;\r\n`;\r\n\r\nconst SearchArea = styled.div`\r\n    text-align: center;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n        border: 1px solid lightgray;\r\n        border-radius: 24px;\r\n        outline: none;\r\n        text-align: left;\r\n        padding-left: 35px;\r\n        width: 27rem;\r\n        height: 2rem;\r\n        font-size : 0.9rem;\r\n        box-shadow: 1px 1px 5px rgba(0, 0, 0, .2);\r\n        transition: $transition-duration;\r\n        &:focus, &:hover {\r\n            box-shadow: 2px 2px 5px rgba(0, 0, 0, .4);\r\n        }\r\n`;\r\n\r\nconst ButtonArea = styled.div`\r\n    margin-top: 25px;\r\n    text-align: center;\r\n`;\r\n\r\nconst ChromeButton = styled.button`\r\n    border: 1px solid #f2f2f2;\r\n    background-color: #f2f2f2;\r\n    color: #5F6368;\r\n    font-size: 0.8rem;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    min-width: 135px;\r\n    height: 36px;\r\n    cursor: pointer;\r\n    padding: 0 16px;\r\n    margin: 11px 4px;\r\n    &:hover {\r\n            border: 1px solid #95a5a6;\r\n            color: #3d3d3d;\r\n        }\r\n`;\r\n\r\nconst Chrome = () => {\r\n\r\n    const [search,setsearch] = useState(\"\");\r\n    const Lang = useStore().getState().Lang.lang;\r\n\r\n    const handleChange = e => {\r\n        setsearch(e.target.value);\r\n    };\r\n\r\n    const onSearch = () => {\r\n        if(search){\r\n            window.open('https://google.com/search?q=' + search);\r\n        }\r\n        setsearch(\"\");\r\n    };\r\n\r\n    const handleKey = e => {\r\n        if(e.charCode === 13){\r\n            onSearch();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Browser>\r\n            <BrowserTop>\r\n                <BrowserAddressBar type=\"text\" value=\"www.google.com\" disabled />\r\n            </BrowserTop>\r\n            <ImageArea>\r\n                <GoogleImage src=\"Images/google.png\" />\r\n            </ImageArea>\r\n            <SearchArea>\r\n                <SearchInput autoFocus type=\"text\" value={search} onChange={event => handleChange(event)} onKeyPress={event => handleKey(event)}  />\r\n            </SearchArea>\r\n            <ButtonArea>\r\n                <ChromeButton onClick={() => onSearch()}>\r\n                    {Lang === \"en\" ? \"Google Search\" : \"구글 검색\"}\r\n                </ChromeButton>\r\n                <ChromeButton>\r\n                    I'm Feeling Lucky\r\n                </ChromeButton>\r\n            </ButtonArea>\r\n        </Browser>\r\n    );\r\n}\r\n\r\nexport default Chrome;\r\n","import { keyframes } from \"styled-components\";\r\n\r\nconst spin = keyframes`\r\n  from {\r\n    transform: none;\r\n  }\r\n\r\n  to {\r\n    transform: rotateY(1turn);\r\n  }\r\n`;\r\n\r\nconst bounce = keyframes`\r\n    0% {\r\n      color: red;\r\n    }\r\n    25% {\r\n      color: orange;\r\n    }\r\n    50% {\r\n      color: green;\r\n    }\r\n    75% {\r\n      color: blue;\r\n    }\r\n    100% {\r\n      transform: scale(1.1);\r\n      color: purple;\r\n    }\r\n`;\r\n\r\nconst scale = keyframes`\r\n  0% {\r\n    transform: scale(.5);\r\n  }\r\n  100% {\r\n    transform: scale(1.0);\r\n  }\r\n`;\r\n\r\nexport { bounce, scale, spin };","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useStore } from \"react-redux\";\r\nimport { scale } from \"Components/Common/Keyframe\";\r\nimport { infos } from \"Components/Main/data\";\r\n\r\nconst Information = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    border-radius: 0px 0px 5px 5px;\r\n    background-color: #eee;\r\n`;\r\n\r\nconst InfoWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n    @media only screen and (min-width: 320px) {\r\n      padding-top: 30%;\r\n    }\r\n    @media only screen and (min-width: 768px) {\r\n      padding-top: 5%;\r\n    }\r\n    @media only screen and (min-width: 1224px) {\r\n      padding-top: 130px;\r\n    }\r\n`;\r\n\r\nconst InfoLogo = styled.img`\r\n    width: 20rem;\r\n    transform: scale(.5);\r\n    animation: ${scale} 1s alternate infinite;\r\n`;\r\n\r\nconst InfoDetail = styled.div`\r\n    color: gray;\r\n`;\r\n\r\nconst InfoDetailTitle = styled.div`\r\n        margin-top: 10px;\r\n        margin-bottom: 20px;\r\n        color: #60D9FA;\r\n        font-weight: bold;\r\n        font-size: 2rem;\r\n`;\r\n\r\nconst InfoDetailText = styled.div`\r\n        margin: 5px 0;\r\n        font-size: 1rem;\r\n        color : #4b6584;\r\n`;\r\n\r\nconst SourceLink = styled.div`\r\n      margin: 25px 0;\r\n      font-size: 1rem;\r\n`;\r\n\r\nconst BackButton = styled.button`\r\n      cursor: pointer;\r\n      outline: none;\r\n      border: none;\r\n      border-radius: 5px;\r\n      margin: 20px 0;\r\n      padding: 5px 10px;\r\n      box-shadow: 0px 0px 5px rgba(0, 0, 0, .2);\r\n      transition: .3s;\r\n      &:hover {\r\n        box-shadow: 0px 0px 10px rgba(0, 0, 0, .5);\r\n      }\r\n`;\r\n\r\nconst LogoWrapper = styled.div`\r\n    width: 100%;\r\n    min-height: 260px;\r\n`;\r\n\r\nconst Info = ({changeMenu}) => {\r\n\r\n    const Lang = useStore().getState().Lang.lang;\r\n\r\n    return (\r\n        <Information>\r\n            <InfoWrapper>\r\n                <LogoWrapper>\r\n                    <InfoLogo src=\"Images/react.png\" />\r\n                </LogoWrapper>\r\n                <InfoDetail>\r\n                    <InfoDetailTitle>{infos[Lang][\"title\"]}</InfoDetailTitle>\r\n                    <InfoDetailText>\r\n                    {infos[Lang][\"developer\"]}<b>{infos[Lang][\"name\"]}</b>\r\n                    </InfoDetailText>\r\n                    <InfoDetailText>\r\n                    {infos[Lang][\"enddate\"]}<b>2019/05/25</b>\r\n                    </InfoDetailText>\r\n                    <InfoDetailText>\r\n                    {infos[Lang][\"language\"]}\r\n                    </InfoDetailText>\r\n                    <InfoDetailText>\r\n                        <SourceLink>\r\n                        {infos[Lang][\"source\"]} <a href=\"https://github.com/yht0827/portfolio\">{infos[Lang][\"github\"]}</a>\r\n                        </SourceLink>\r\n                    </InfoDetailText>\r\n                </InfoDetail>\r\n                <BackButton onClick={() => changeMenu(false)}>{infos[Lang][\"back\"]}</BackButton>\r\n            </InfoWrapper>\r\n        </Information>\r\n    );\r\n};\r\n\r\nexport default Info;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useStore } from \"react-redux\";\r\nimport { bounce } from \"Components/Common/Keyframe\";\r\nimport { profiles } from \"Components/Main/data\";\r\n\r\nconst About = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  text-align: center;\r\n  border-radius: 0px 0px 5px 5px;\r\n  background-color: #eee;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst ProfileImg = styled.img`\r\n    width: 150px;\r\n    border: 5px solid #fff;\r\n    border-radius: 50%;\r\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, .5);\r\n    @media only screen and (min-width: 320px) {\r\n      margin-top: 10%;\r\n    }\r\n    @media only screen and (min-width: 768px) {\r\n      margin-top: 8%;\r\n    }\r\n    @media only screen and (min-width: 1224px) {\r\n      margin-top: 60px;\r\n    }\r\n`;\r\n\r\nconst ProfileName = styled.div`\r\n    margin-top: 5px;\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst ProfileBirth = styled.div`\r\n    margin-top: 5px;\r\n    font-size: .8rem;\r\n`;\r\n\r\nconst ProfileMotto = styled.div`\r\n    margin-top: 15px;\r\n    font-size: 0.9rem;\r\n    font-weight: bold;\r\n    color: gray;\r\n    animation: ${bounce} 1s alternate infinite;\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n    margin-top: 1.2rem;\r\n`;\r\n\r\nconst ContentTitle = styled.div`\r\n    font-weight: bold;\r\n    font-size: 1.5rem;\r\n    margin-bottom: 3px;\r\n    color: ${props => props.color};\r\n`;\r\n\r\nconst ContentText = styled.div`\r\n    margin-bottom: 5px;\r\n    font-weight: bold;\r\n    font-size: 1rem;\r\n    color: ${props => props.color};\r\n`;\r\n\r\nconst BackButton = styled.button`\r\n      cursor: pointer;\r\n      outline: none;\r\n      border: none;\r\n      border-radius: 5px;\r\n      margin: 20px 0;\r\n      padding: 5px 10px;\r\n      box-shadow: 0px 0px 5px rgba(0, 0, 0, .2);\r\n      transition: .3s;\r\n      &:hover {\r\n        box-shadow: 0px 0px 10px rgba(0, 0, 0, .5);\r\n      }\r\n`;\r\n\r\nconst AboutMe = ({changeMenu}) => {\r\n\r\n    const Lang = useStore().getState().Lang.lang;\r\n\r\n    return (\r\n        <About>\r\n            <ProfileImg src=\"Images/Mario.jpg\" />\r\n            <ProfileName>{profiles[Lang][\"name\"]}</ProfileName>\r\n            <ProfileBirth>{profiles[Lang][\"birth\"]}</ProfileBirth>\r\n            <ProfileMotto>{profiles[Lang][\"motto\"]}</ProfileMotto>\r\n            <ContentWrapper>\r\n                <ContentTitle color=\"#e55039\">{profiles[Lang][\"grade\"]}</ContentTitle>\r\n                <ContentText color=\"#8395a7\">{profiles[Lang][\"uni\"]}</ContentText>\r\n            </ContentWrapper>\r\n            <ContentWrapper>\r\n                <ContentTitle color=\"#fa983a\">{profiles[Lang][\"major\"]}</ContentTitle>\r\n                { profiles[Lang].majors.map((major,index) => <ContentText key={index} color=\"#8395a7\">{major}</ContentText>)}\r\n            </ContentWrapper>\r\n            <ContentWrapper>\r\n                <ContentTitle color=\"#10ac84\">{profiles[Lang][\"certificate\"]}</ContentTitle>\r\n                { profiles[Lang].certificates.map((cert,index) => <ContentText key={index} color=\"#8395a7\">{cert}</ContentText> )}\r\n            </ContentWrapper>\r\n            <BackButton onClick={() => changeMenu(false)}>Back</BackButton>\r\n        </About>\r\n    );\r\n};\r\n\r\nexport default AboutMe;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Project } from \"Components/Project\";\r\nimport { Terminal } from \"Components/Terminal\";\r\nimport { Chrome } from \"Components/Chrome\";\r\nimport { Info } from \"Components/Info\";\r\nimport { AboutMe } from \"Components/AboutMe\";\r\nimport { folders } from \"Components/Main/data\";\r\n\r\nconst WindowWrapper = styled.div`\r\n  position: absolute;\r\n  padding: 0;\r\n  margin: 0;\r\n  margin: auto;\r\n  width: 45rem;\r\n  height: 40rem;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);\r\n  transition: opacity 0.5s;\r\n  &.fade-enter{\r\n      opacity: 0;\r\n  }\r\n  &.fade-enter-active{\r\n      opacity: 1;\r\n  }\r\n  &.fade-exit {\r\n      opacity: 1;\r\n  }\r\n  &.fade-exit-active {\r\n      opacity: 0;\r\n  }\r\n\r\n  @media only screen and (min-width: 320px) {\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: calc(100% - 80px);\r\n    -webkit-transform: none;\r\n       -moz-transform: none;\r\n        -ms-transform: none;\r\n         -o-transform: none;\r\n            transform: none;\r\n  }\r\n  @media only screen and (min-width: 768px) {\r\n    width: 65%;\r\n    height: 70%;\r\n    top: calc(50% - 50px);\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n       -moz-transform: translate(-50%, -50%);\r\n        -ms-transform: translate(-50%, -50%);\r\n         -o-transform: translate(-50%, -50%);\r\n            transform: translate(-50%, -50%);\r\n  }\r\n  @media only screen and (min-width: 1224px) {\r\n    width: 45rem;\r\n    height: 40rem;\r\n    top: calc(50% - 50px);\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n       -moz-transform: translate(-50%, -50%);\r\n        -ms-transform: translate(-50%, -50%);\r\n         -o-transform: translate(-50%, -50%);\r\n            transform: translate(-50%, -50%);\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 30px;\r\n    border-radius: 5px 5px 0 0;\r\n    background-color: #546e7a;\r\n`;\r\n\r\nconst CloseButton = styled.span`\r\n    cursor: pointer;\r\n    width: 14px;\r\n    height: 14px;\r\n    margin-top: 6px;\r\n    margin-left: 4px;\r\n    margin-right: 4px;\r\n    border-radius: 50%;\r\n    color: #860003;\r\n    background-color: #FC3C3F;\r\n    text-align: center;\r\n    line-height: 16px;\r\n`;\r\n\r\nconst Button = styled.span`\r\n    width: 14px;\r\n    height: 14px;\r\n    margin-top: 6px;\r\n    margin-right: 4px;\r\n    border-radius: 50%;\r\n    background-color: ${props => props.color};\r\n    text-align: center;\r\n    line-height: 16px;\r\n`;\r\n\r\nconst TitleContent = styled.div`\r\n    height: 100%;\r\n    line-height: 30px;\r\n    color: #dbdee0;\r\n    font-weight: bold;\r\n\r\n    @media only screen and (min-width: 320px) {\r\n        margin-left: 35%;  \r\n    }\r\n\r\n    @media only screen and (min-width: 768px) {\r\n        margin-left: 40%;\r\n    }\r\n\r\n    @media only screen and (min-width: 1224px) {\r\n        margin-left: 40%;\r\n    }\r\n\r\n`;\r\n\r\nconst Window = ({ changeMenu, index, Lang }) => (\r\n      <WindowWrapper>\r\n                <Title>\r\n                <CloseButton onClick={() => changeMenu(false)} />\r\n                <Button color=\"#FEB525\"/>\r\n                <Button color=\"#2AC933\"/>\r\n                <TitleContent>{folders[index][Lang+\"-name\"]}</TitleContent>\r\n              </Title>\r\n              {index === 0 && <Project />}\r\n              {index === 1 && <AboutMe changeMenu={changeMenu} />}\r\n              {index === 2 && <Terminal changeMenu={changeMenu} />}\r\n              {index === 4 && <Chrome />}\r\n              {index === 7 && <Info changeMenu={changeMenu} />}\r\n      </WindowWrapper>\r\n);\r\n\r\nexport default Window;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useStore } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Window from \"Components/Main/Window\";\r\nimport { folders } from \"Components/Main/data\";\r\n\r\nconst IconArea = styled.div`\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      height: 100%;\r\n`;\r\n\r\nconst IconWraper = styled.div`\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: center;\r\n        max-width: 38rem;\r\n        padding: 1rem;\r\n        @media only screen and (max-width: 611px) {\r\n            max-width: 20rem;\r\n        }\r\n`;\r\n\r\nconst IconContent = styled.div`\r\n  cursor: pointer;\r\n  width: 8rem;\r\n  height: 7rem;\r\n  padding: 1rem;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, .2);\r\n  }\r\n`; \r\n\r\nconst IconImg = styled.img`\r\n    width: 4rem;\r\n    height: 4rem;\r\n`;\r\n\r\nconst IconName = styled.div`\r\n    color: #fff;\r\n    text-shadow: 1px 1px 2px #000;\r\n`;\r\n\r\nconst CSSWrapper = styled.div`\r\n        transition: opacity 0.5s;\r\n        &.show-enter {\r\n            opacity: 0;\r\n        }\r\n        &.show-enter-active {\r\n            opacity: 1;\r\n        }\r\n        &.show-exit {\r\n            opacity: 1;\r\n        }\r\n        &.show-exit-active {\r\n            opacity: 0;\r\n        }\r\n`;\r\n\r\nconst Icon = () => {\r\n    const [index,setindex] = useState(0);\r\n    const [openMenu,setMenu] = useState(false);\r\n    const Lang = useStore().getState().Lang.lang;\r\n\r\n    const changeAction = (index) => {\r\n      \r\n        setindex(index);\r\n\r\n        if(index === 3){\r\n            window.open(\"https://github.com/yht0827\");\r\n        }else if(index === 5){\r\n            window.open(\"https://open.kakao.com/o/svxAQRGb\");\r\n        }\r\n        else if(index === 6){\r\n            window.open(\"mailto:yangheetae0827@naver.com\");\r\n        }else{\r\n            openMenu? setMenu(false): setMenu(true);\r\n        }\r\n    };\r\n\r\n    const changeMenu = (value) => {\r\n        setMenu(value);\r\n    }\r\n\r\n    return (\r\n    <>\r\n    <IconArea>\r\n        <IconWraper>\r\n            { folders.map((folder, index) => \r\n                    <IconContent key={index} onClick={() => changeAction(index)}>\r\n                        <IconImg src={folder.image} />\r\n                        <IconName>{folder[Lang+\"-name\"]}</IconName>\r\n                    </IconContent>\r\n                )\r\n            }\r\n        </IconWraper>\r\n    </IconArea>\r\n        <CSSTransition in={openMenu} classNames=\"show\" timeout={500} unmountOnExit>\r\n        <CSSWrapper><Window index={index} changeMenu={changeMenu} Lang={Lang} /></CSSWrapper>\r\n        </CSSTransition>\r\n    </>\r\n)};\r\n\r\nexport default Icon;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport {startmenu } from \"Components/Main/data\";\r\nimport * as LangActions from \"redux/modules/Lang\";\r\n\r\nconst TaskBar = styled.div`\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: rgba(0, 0, 0, .3);\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n`;\r\n\r\nconst MenuButton = styled.button`\r\n      cursor: pointer;\r\n      width: 80px;\r\n      height: 100%;\r\n      color: #fff;\r\n      border: none;\r\n      outline: none;\r\n      font-weight: bold;\r\n      font-size: 1rem;\r\n      background-color: rgba(0, 0, 0, .2);\r\n      &:hover {\r\n        background-color: rgba(0, 0, 0, .4);\r\n      }\r\n`;\r\n\r\nconst MenuImg = styled.img`\r\n        width: 45px;\r\n        height: 45px;\r\n`;\r\n\r\nconst MenuTime = styled.div`\r\n      width: 90px;\r\n      height: 100%;\r\n      color: #fff;\r\n      line-height: 50px;\r\n      text-align: center;\r\n      font-size: 0.89rem;\r\n      float: right;\r\n      background-color: rgba(0, 0, 0, .2);\r\n`;\r\n\r\nconst StartMenu = styled.div`\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 50px;\r\n    background-color: rgba(0, 0, 0, .5);\r\n    color: #fff;\r\n    text-align: center;\r\n    transition: opacity 0.5s;\r\n\r\n    &.fade-enter {\r\n        opacity: 0;\r\n    }\r\n    &.fade-enter-active {\r\n        opacity: 1;\r\n    }\r\n    &.fade-exit {\r\n        opacity: 1;\r\n    }\r\n    &.fade-exit-active {\r\n        opacity: 0;\r\n    }\r\n\r\n    @media only screen and (min-width: 320px), (min-width: 768px) {\r\n      border-radius: 0;\r\n      height: 100%;\r\n      width: 100%;\r\n      background-color: rgba(0, 0, 0, .9);\r\n    }\r\n    @media only screen and (min-width: 1224px) {\r\n      width: 25rem;\r\n      height: 40rem;\r\n      border-top-right-radius: 10px;\r\n      background-color: rgba(0, 0, 0, .5);\r\n    }\r\n`;\r\n\r\nconst PowerImg = styled.img`\r\n    cursor: pointer;\r\n    margin-bottom: 2rem;\r\n    border-radius: 50%;\r\n    transition: .3s;\r\n\r\n    @media only screen and (min-width: 320px), (min-width: 768px) {\r\n        margin-top: 50%;\r\n      }\r\n      @media only screen and (min-width: 1224px) {\r\n        margin-top: 40%;\r\n      }\r\n      &:hover {\r\n        box-shadow: 0px 0px 20px rgba(255, 255, 255, 0.5);\r\n                transform: scale(1.1);\r\n      }\r\n`;\r\n\r\nconst PowerOffText = styled.div`\r\n    display: block;\r\n`;\r\n\r\nconst LanguageButtonArea = styled.div``;\r\n\r\nconst LanguageText = styled.div`\r\n        color: #fff;\r\n        margin-bottom: 16px;\r\n`;\r\n\r\nconst LanguageButton = styled.button`\r\n        cursor: pointer;\r\n        outline: none;\r\n        border: 1px solid #fff;\r\n        border-radius: 5px;\r\n        padding: 2px 6px;\r\n        color: #fff;\r\n        background-color: transparent;\r\n                transition: $transition-duration;\r\n        &:hover {\r\n          box-shadow: 0px 0px 10px rgba(255, 255, 255, .5);\r\n        }\r\n`;\r\n\r\nconst UnderBar = ({changeLog}) => {\r\n    const [openMenu, setMenu] = useState(false);\r\n    const [date, setDate] = useState(new Date());\r\n    const Lang = useSelector(state => state.Lang.lang);\r\n    const [items, setItems] = useState(startmenu[Lang]);\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        const Timer = setInterval(() => tick(),900);\r\n        return function Cleanup() { clearInterval(Timer); }\r\n    });\r\n\r\n    const changeAction = () => {\r\n        openMenu ? setMenu(false) : setMenu(true);\r\n    }\r\n\r\n    const tick = () => {\r\n        setDate(new Date());\r\n    };\r\n\r\n    const changeLang = () => {\r\n        if(Lang === \"kr\"){\r\n            dispatch(LangActions.changeLang({lang:\"en\"}));\r\n            setItems(startmenu.en);\r\n        }else if(Lang === \"en\"){\r\n            dispatch(LangActions.changeLang({lang:\"kr\"}));\r\n            setItems(startmenu.kr);\r\n        }\r\n    };\r\n\r\n    const getAP = (lang) => {\r\n        if(lang === \"en\"){\r\n          return date.getHours() < 12 ? \"AM\" : \"PM\"\r\n        }else if(lang === \"kr\"){\r\n          return date.getHours() < 12 ? \"오전\" : \"오후\"\r\n        }\r\n      };\r\n\r\n    return (\r\n    <>\r\n        <TaskBar>\r\n            <MenuButton onClick={changeAction}>\r\n                <MenuImg src=\"Images/window.png\" />\r\n            </MenuButton>\r\n            <MenuTime>\r\n                {Lang=== \"kr\" && getAP(Lang)}&nbsp;\r\n                {date.toLocaleTimeString(\"en-GB\",{hour:\"2-digit\",minute:\"2-digit\"})}&nbsp;\r\n                {Lang=== \"en\" && getAP(Lang)}\r\n            </MenuTime>\r\n        </TaskBar>\r\n        <CSSTransition in={openMenu} classNames=\"fade\" timeout={300} unmountOnExit>\r\n            <StartMenu>\r\n                <PowerImg src=\"Images/poweroff.png\" onClick={() => changeLog()} />\r\n                <PowerOffText>{items.power}</PowerOffText>\r\n                <LanguageButtonArea>\r\n                    <LanguageText>{items.langtext}</LanguageText>\r\n                    <LanguageButton onClick={() => changeLang()}>{items.lang}</LanguageButton>\r\n                </LanguageButtonArea>\r\n            </StartMenu>\r\n        </CSSTransition>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default UnderBar;\r\n","import React,{ useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GlobalStyle } from \"Components/Common\";\r\nimport styled from \"styled-components\";\r\nimport { Icon, UnderBar } from \"Components/Main\"\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Loginmenu } from \"Components/Main/data\";\r\nimport * as LangActions from \"redux/modules/Lang\";\r\nimport { bounce, spin } from \"Components/Common/Keyframe\";\r\nimport FadeIn from \"react-fade-in\";\r\n\r\nconst Background = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  font-family: \"NanumSquareRound\";\r\n  background: url(\"Images/background.jpg\") center;\r\n  background-size: cover;\r\n`;\r\n\r\nconst Main = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    transition: opacity 0.5s;\r\n        &.show-enter {\r\n            opacity: 0;\r\n        }\r\n        &.show-enter-active {\r\n            opacity: 1;\r\n        }\r\n        &.show-exit {\r\n            opacity: 1;\r\n        }\r\n        &.show-exit-active {\r\n            opacity: 0;\r\n        }\r\n`;\r\n\r\nconst Desktop = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-bottom: 50px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst Login = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nconst UserProfile = styled.div`\r\n    width: 100%;\r\n    text-align: center;\r\n    @media only screen and (min-width: 320px), (min-width: 768px) {\r\n      margin-top: 25%;\r\n    }\r\n    @media only screen and (min-width: 1224px) {\r\n      margin-top: 15%;\r\n    }\r\n`;\r\n\r\nconst ProfileImg = styled.img`\r\n      width: 150px;\r\n      height: 150px;\r\n      border-radius: 50%;\r\n      border: 3px solid #fff;\r\n      background-color: #fff;\r\n      animation: ${props=> props.ani === true && spin} 1.7s linear infinite;\r\n      margin-bottom: 5px;\r\n`;\r\n\r\nconst ProfileName = styled.p`\r\n      color: #fff;\r\n      font-weight: bold;\r\n      font-size: 2rem;\r\n`;\r\n\r\nconst ButtonArea = styled.div`\r\n    margin: auto;\r\n    margin-top: 30px;\r\n    text-align: center;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n      cursor: pointer;\r\n      border: 1px solid #fff;\r\n      border-radius: 5px;\r\n      background-color: rgba(0, 0, 0, 0);\r\n      outline: none;\r\n      color: #fff;\r\n      font-weight: bold;\r\n      padding: 10px 20px;\r\n      transition: 0.3s;\r\n      &:hover {\r\n        background-color: rgba(255, 255, 255, 0.2);\r\n        color: #eee;\r\n      }\r\n`;\r\n\r\nconst LoginMessage = styled.div`\r\n      width: 100%;\r\n      font-weight: bold;\r\n      font-size: 1.5rem;\r\n      color: #D980FA;\r\n      text-align: center;\r\n`;\r\n\r\nconst LangMessage = styled.div`\r\n      width: 100%;\r\n      font-weight: bold;\r\n      font-size: 1.3rem;\r\n      color: #fff;\r\n      text-align: center;\r\n      animation: ${bounce} 1s alternate infinite;\r\n      margin-bottom: 5px;\r\n`;\r\n\r\nconst TimeArea = styled.div`\r\n    position: absolute;\r\n    bottom: 0;\r\n    margin: 20px;\r\n    color: #fff;\r\n`;\r\n\r\nconst Timer = styled.div`\r\n    font-weight: bold;\r\n    @media only screen and (min-width: 320px) {\r\n        font-size: 2.5rem;\r\n      }\r\n      @media only screen and (min-width: 768px),(min-width: 1224px) {\r\n        font-size: 4rem;\r\n      }\r\n`;\r\n\r\nconst TimeAP = styled.b`\r\n        font-size: 1.5rem;\r\n`;\r\n\r\nconst DateArea = styled.div`\r\n      @media only screen and (min-width: 320px) {\r\n        font-size: 1rem;\r\n      }\r\n      @media only screen and (min-width: 768px), (min-width: 1224px) {\r\n        font-size: 1.5rem;\r\n      }\r\n`;\r\n\r\nconst App = () => {\r\n    const [date, setDate] = useState(new Date());\r\n    const [clickBt,setBt] = useState(false);\r\n    const Lang = useSelector(state => state.Lang.lang);\r\n    const isLogged = useSelector(state => state.Lang.isLogged);\r\n    const dispatch = useDispatch();\r\n    \r\n    const changeLog = () => {\r\n      if(isLogged){\r\n        setBt(false);\r\n        setTimeout(() => dispatch(LangActions.changeLog({isLogged:false})),2000);\r\n      }else{\r\n        setBt(true);\r\n        setTimeout(() => dispatch(LangActions.changeLog({isLogged:true})),2500);\r\n\r\n      }\r\n    };\r\n\r\n    const getDate = (lang) => {\r\n      if(lang === \"en\"){\r\n        return `${Loginmenu.en.day[date.getDay()]}, ${date.getDate()} ${Loginmenu.en.month[date.getMonth()]}`;\r\n      }else{\r\n        return `${Loginmenu.kr.month[date.getMonth()]} ${date.getDate()}일 ${Loginmenu.kr.day[date.getDay()]}`;\r\n      }\r\n    };\r\n\r\n    const getAP = (lang) => {\r\n      if(lang === \"en\"){\r\n        return date.getHours() < 12 ? \"AM\" : \"PM\"\r\n      }else if(lang === \"kr\"){\r\n        return date.getHours() < 12 ? \"오전\" : \"오후\"\r\n      }\r\n    };\r\n\r\n    const tick = () => {\r\n      setDate(new Date());\r\n    };\r\n\r\n    const ChangeLang = () => {\r\n      if(Lang === \"en\"){\r\n        dispatch(LangActions.changeLang({lang:\"kr\"}));\r\n        getDate(\"kr\");\r\n        getAP(\"kr\");\r\n        setDate(new Date());\r\n      }else if(Lang === \"kr\"){\r\n        dispatch(LangActions.changeLang({lang:\"en\"}));\r\n        getDate(\"en\");\r\n        getAP(\"en\");\r\n        setDate(new Date());\r\n      }     \r\n};\r\n\r\n  useEffect(() => {\r\n    const Timer = setInterval(() => tick(),900);\r\n    return function Cleanup() { clearInterval(Timer); }\r\n  });\r\n  \r\n    return (\r\n    <>\r\n    <Helmet>\r\n         <title>HT's Portfolio</title>\r\n    </Helmet>\r\n    <Background>\r\n      <FadeIn delay={300} transitionDuration={700}>\r\n                  <Main>\r\n        { isLogged ?\r\n              <>\r\n                    <Desktop>\r\n                      <Icon />\r\n                    </Desktop>\r\n                    <UnderBar changeLog={changeLog} />\r\n              </>\r\n                :\r\n              <Login>\r\n                  <UserProfile>\r\n                      <ProfileImg src=\"Images/Mario.jpg\" ani={clickBt} />\r\n                      <ProfileName>{Loginmenu[Lang].name}</ProfileName>\r\n                  </UserProfile>\r\n                  <ButtonArea>\r\n                 { clickBt ? <LoginMessage>{Loginmenu[Lang].hello}</LoginMessage>\r\n                   : <StyledButton onClick={() => changeLog()}>{Loginmenu[Lang].login}</StyledButton> \r\n                 }\r\n                  </ButtonArea>\r\n                   <ButtonArea>\r\n                      <LangMessage onClick={() => ChangeLang()}>{Loginmenu[Lang].langtext}</LangMessage>\r\n                   </ButtonArea>\r\n                  <TimeArea>\r\n                      <Timer>\r\n                          {date.toLocaleTimeString(\"en-US\", { hour12: false })}\r\n                          <TimeAP>{getAP(Lang)}</TimeAP>\r\n                      </Timer>\r\n                      <DateArea>{getDate(Lang)}</DateArea>\r\n                  </TimeArea>\r\n              </Login>\r\n            }\r\n            </Main>\r\n            </FadeIn>\r\n      <GlobalStyle />\r\n    </Background>\r\n    </>\r\n    )\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\"\r\nimport configureStore from \"redux/configureStore\";\r\nimport App from \"App\";\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>, document.getElementById('root')\r\n);"],"sourceRoot":""}